#! /spin/software/nuke/11.2v4/linux/64/libnuke-11.2.4.so -nx
version 11.2 v4
define_window_layout_xml {<?xml version="1.0" encoding="UTF-8"?>
<layout version="1.0">
    <window x="-3" y="-3" w="1920" h="1025" maximized="1" screen="0">
        <splitter orientation="1">
            <split size="40"/>
            <dock id="" hideTitles="1" activePageId="Toolbar.1">
                <page id="Toolbar.1"/>
            </dock>
            <split size="1257" stretch="1"/>
            <splitter orientation="2">
                <split size="573"/>
                <dock id="" activePageId="Viewer.1">
                    <page id="uk.co.thefoundry.scripteditor.1"/>
                    <page id="Viewer.1"/>
                    <page id="Viewer.2"/>
                    <page id="Viewer.3"/>
                </dock>
                <split size="402"/>
                <dock id="" activePageId="DAG.1" focus="true">
                    <page id="DAG.1"/>
                    <page id="Curve Editor.1"/>
                    <page id="DopeSheet.1"/>
                    <page id="DAG.2"/>
                    <page id="DAG.4"/>
                    <page id="DAG.3"/>
                </dock>
            </splitter>
            <split size="615"/>
            <dock id="" activePageId="Properties.1">
                <page id="Properties.1"/>
            </dock>
        </splitter>
    </window>
</layout>
}
Root {
 inputs 0
 name /spin/ldap_accounts/eleroy/Documents/Erwan/nuke_RnD/mapoga/nuke-vector-matrix/temp/eleroy_wip_01.nk
 frame 1001
 first_frame 1001
 last_frame 1296
 lock_range true
 format "2048 1556 0 0 2048 1556 1 2K_Super_35(full-ap)"
 proxy_type scale
 proxy_format "1024 778 0 0 1024 778 1 1K_Super_35(full-ap)"
 colorManagement OCIO
 defaultViewerLUT "OCIO LUTs"
 workingSpaceLUT linear
 monitorLut sRGB
 int8Lut sRGB
 int16Lut sRGB
 logLut Cineon
 floatLut linear
}
BackdropNode {
 inputs 0
 name BackdropNode1
 tile_color 0x667e7fff
 label Done
 note_font_size 40
 xpos -1982
 ypos -141
 bdwidth 201
 bdheight 563
}
BackdropNode {
 inputs 0
 name Backdrop_Done_and_documented
 tile_color 0x737f66ff
 label "Done and documented"
 note_font_size 40
 xpos -2284
 ypos -206
 bdwidth 262
 bdheight 621
}
BackdropNode {
 inputs 0
 name Backdrop_TODO
 tile_color 0x66717fff
 label TODO
 note_font_size 40
 xpos -1409
 ypos 283
 bdwidth 246
 bdheight 343
}
BackdropNode {
 inputs 0
 name Backdrop_WIP
 tile_color 0x7f7366ff
 label WIP
 note_font_size 40
 xpos -1750
 ypos 2
 bdwidth 182
 bdheight 244
}
BackdropNode {
 inputs 0
 name Backdrop_WIP1
 tile_color 0x667f79ff
 label WIP
 note_font_size 40
 xpos -1724
 ypos 487
 bdwidth 180
 bdheight 168
}
Group {
 inputs 0
 name MagnitudeVector2_
 help "Calculate the magnitude (scalar) of an input Vector2."
 xpos -2220
 ypos -76
 addUserKnob {20 main_tab l "Magnitude Vector2"}
 addUserKnob {41 in l "Vector B Layer" t "Layer containing the vector information for input B" T vector_layer.in}
 addUserKnob {26 ""}
 addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
}
 Input {
  inputs 0
  name vectorB
  xpos 0
 }
 Dot {
  name Dot1
  tile_color 0xcccccc00
  xpos 34
  ypos 108
 }
set Nb6174f0 [stack 0]
 Shuffle {
  name vector_layer
  xpos 140
  ypos 104
 }
 Remove {
  operation keep
  channels rgba
  name Remove1
  xpos 140
  ypos 130
 }
 Expression {
  channel0 rgba
  expr0 sqrt((r*r)+(g*g))
  channel2 {-rgba.red -rgba.green -rgba.blue none}
  channel3 {none none none -rgba.alpha}
  name Mag2
  xpos 140
  ypos 218
 }
 Dot {
  name Dot2
  tile_color 0xcccccc00
  xpos 174
  ypos 364
 }
push $Nb6174f0
 ShuffleCopy {
  inputs 2
  in2 none
  red red
  green green
  blue blue
  out {{{parent.UV_Channel.in}}}
  name ShuffleCopy1
  xpos 0
  ypos 360
 }
 Output {
  name Output1
  xpos 0
  ypos 506
 }
end_group
Group {
 inputs 0
 name Magnitude_Vector3_
 help "Calculate the magnitude (scalar) of an input Vector3."
 xpos -2218
 ypos -35
 addUserKnob {20 main_tab l "Magnitude Vector3"}
 addUserKnob {41 in l "Vector B Layer" t "Layer containing the vector information for input B" T vector_layer.in}
 addUserKnob {26 ""}
 addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
}
 Input {
  inputs 0
  name vectorB
  xpos 0
 }
 Dot {
  name Dot1
  tile_color 0xcccccc00
  xpos 34
  ypos 108
 }
set Nb601370 [stack 0]
 Shuffle {
  name vector_layer
  xpos 140
  ypos 104
 }
 Remove {
  operation keep
  channels rgba
  name Remove1
  xpos 140
  ypos 130
 }
 Expression {
  channel0 rgba
  expr0 sqrt((r*r)+(g*g)+(b*b))
  channel2 {-rgba.red -rgba.green -rgba.blue none}
  channel3 {none none none -rgba.alpha}
  name Mag3
  xpos 140
  ypos 227
 }
 Dot {
  name Dot2
  tile_color 0xcccccc00
  xpos 174
  ypos 364
 }
push $Nb601370
 ShuffleCopy {
  inputs 2
  in2 none
  red red
  green green
  blue blue
  out {{{parent.UV_Channel.in}}}
  name ShuffleCopy1
  xpos 0
  ypos 360
 }
 Output {
  name Output1
  xpos 0
  ypos 506
 }
end_group
Group {
 inputs 0
 name NormalizeVector2_
 help "Normalize the magnitude of a Vector2 (to be of magnitude 1)"
 xpos -2216
 ypos 2
 addUserKnob {20 main_tab l "Normalize Vector2"}
 addUserKnob {41 in l "Vector B Layer" t "Layer containing the vector information for input B" T vector_layer.in}
 addUserKnob {26 ""}
 addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
}
 Input {
  inputs 0
  name vectorB
  xpos 0
 }
 Dot {
  name Dot1
  tile_color 0xcccccc00
  xpos 34
  ypos 108
 }
set Nb4d0d70 [stack 0]
 Shuffle {
  name vector_layer
  xpos 140
  ypos 104
 }
 Remove {
  operation keep
  channels rgba
  name Remove1
  xpos 140
  ypos 130
 }
set Nc5d8d30 [stack 0]
push $Nc5d8d30
 Expression {
  channel0 {rgba.red rgba.green -rgba.blue -rgba.alpha}
  expr0 sqrt((r*r)+(g*g))
  channel1 {-rgba.red -rgba.green rgba.blue rgba.alpha}
  expr1 1
  channel2 {-rgba.red -rgba.green -rgba.blue none}
  channel3 {none none none -rgba.alpha}
  name Mag2
  xpos 289
  ypos 216
 }
 Merge2 {
  inputs 2
  operation divide
  bbox B
  name Merge1
  xpos 140
  ypos 267
 }
 Dot {
  name Dot2
  tile_color 0x4b5ec600
  xpos 174
  ypos 364
 }
push $Nb4d0d70
 ShuffleCopy {
  inputs 2
  in2 none
  red red
  green green
  blue blue
  out {{{parent.UV_Channel.in}}}
  name ShuffleCopy1
  xpos 0
  ypos 360
 }
 Output {
  name Output1
  xpos 0
  ypos 506
 }
end_group
Group {
 inputs 0
 name DotProductVector2_
 help "Calculates the dot product of 2 Vector2 inputs."
 xpos -2219
 ypos 103
 addUserKnob {20 main_tab l "Dot Product Vector2"}
 addUserKnob {41 in l "Vector B Layer" t "Layer containing the vector information for input B" T vector_layer.in}
 addUserKnob {41 in_1 l "Vector A Layer" t "Layer containing the vector information for input A" T vector_layer1.in}
 addUserKnob {26 ""}
 addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
}
 Input {
  inputs 0
  name vectorA
  xpos 457
  ypos -6
  number 1
 }
 Shuffle {
  name vector_layer1
  xpos 457
  ypos 103
 }
 Remove {
  operation keep
  channels rgba
  name Remove2
  xpos 457
  ypos 129
 }
 Dot {
  name Dot3
  tile_color 0x9e3c6300
  xpos 491
  ypos 210
 }
 Input {
  inputs 0
  name vectorB
  xpos 0
 }
 Dot {
  name Dot1
  tile_color 0xcccccc00
  xpos 34
  ypos 108
 }
set Nb942330 [stack 0]
 Shuffle {
  name vector_layer
  xpos 140
  ypos 104
 }
 Remove {
  operation keep
  channels rgba
  name Remove1
  xpos 140
  ypos 130
 }
 MergeExpression {
  inputs 2
  channel0 rgb
  expr0 Br*Ar+Bg*Ag
  channel1 none
  channel2 none
  channel3 none
  name MergeExpression1
  xpos 140
  ypos 206
 }
 Dot {
  name Dot2
  tile_color 0x4b5ec600
  xpos 174
  ypos 364
 }
push $Nb942330
 ShuffleCopy {
  inputs 2
  in2 none
  red red
  green green
  blue blue
  out {{{parent.UV_Channel.in}}}
  name ShuffleCopy1
  xpos 0
  ypos 360
 }
 Output {
  name Output1
  xpos 0
  ypos 506
 }
end_group
Group {
 inputs 0
 name DotProductVector3_
 help "Calculates the dot product of 2 Vector3 inputs."
 xpos -2215
 ypos 152
 addUserKnob {20 main_tab l "Dot Product Vector3"}
 addUserKnob {41 in l "Vector B Layer" t "Layer containing the vector information for input B" T vector_layer.in}
 addUserKnob {41 in_1 l "Vector A Layer" t "Layer containing the vector information for input A" T vector_layer1.in}
 addUserKnob {26 ""}
 addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
}
 Input {
  inputs 0
  name vectorA
  xpos 457
  ypos -6
  number 1
 }
 Shuffle {
  name vector_layer1
  xpos 457
  ypos 103
 }
 Remove {
  operation keep
  channels rgba
  name Remove2
  xpos 457
  ypos 129
 }
 Dot {
  name Dot3
  tile_color 0x9e3c6300
  xpos 491
  ypos 210
 }
 Input {
  inputs 0
  name vectorB
  xpos 0
 }
 Dot {
  name Dot1
  tile_color 0xcccccc00
  xpos 34
  ypos 108
 }
set Nb211b20 [stack 0]
 Shuffle {
  name vector_layer
  xpos 140
  ypos 104
 }
 Remove {
  operation keep
  channels rgba
  name Remove1
  xpos 140
  ypos 130
 }
 MergeExpression {
  inputs 2
  channel0 rgb
  expr0 Br*Ar+Bg*Ag+Bb*Ab
  channel1 none
  channel2 none
  channel3 none
  name MergeExpression1
  xpos 140
  ypos 206
 }
 Dot {
  name Dot2
  tile_color 0x4b5ec600
  xpos 174
  ypos 364
 }
push $Nb211b20
 ShuffleCopy {
  inputs 2
  in2 none
  red red
  green green
  blue blue
  out {{{parent.UV_Channel.in}}}
  name ShuffleCopy1
  xpos 0
  ypos 360
 }
 Output {
  name Output1
  xpos 0
  ypos 506
 }
end_group
Group {
 inputs 0
 name CrossProductVector2_
 help "Calculates the cross product of 2 Vector2 inputs."
 xpos -2213
 ypos 205
 addUserKnob {20 main_tab l "Cross Product Vector2"}
 addUserKnob {41 in l "Vector B Layer" t "Layer containing the vector information for input B" T vector_layer.in}
 addUserKnob {41 in_1 l "Vector A Layer" t "Layer containing the vector information for input A" T vector_layer1.in}
 addUserKnob {26 ""}
 addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
}
 Input {
  inputs 0
  name vectorA
  xpos 457
  ypos -6
  number 1
 }
 Shuffle {
  name vector_layer1
  xpos 457
  ypos 103
 }
 Remove {
  operation keep
  channels rgba
  name Remove2
  xpos 457
  ypos 129
 }
 Dot {
  name Dot3
  tile_color 0x9e3c6300
  xpos 491
  ypos 210
 }
 Input {
  inputs 0
  name vectorB
  xpos 0
 }
 Dot {
  name Dot1
  tile_color 0xcccccc00
  xpos 34
  ypos 108
 }
set Ncf3b570 [stack 0]
 Shuffle {
  name vector_layer
  xpos 140
  ypos 104
 }
 Remove {
  operation keep
  channels rgba
  name Remove1
  xpos 140
  ypos 130
 }
 MergeExpression {
  inputs 2
  channel0 rgb
  expr0 "Br*Ag - Bg*Ar"
  name MergeExpression2
  xpos 140
  ypos 206
 }
 Dot {
  name Dot2
  tile_color 0x4b5ec600
  xpos 174
  ypos 364
 }
push $Ncf3b570
 ShuffleCopy {
  inputs 2
  in2 none
  red red
  green green
  blue blue
  out {{{parent.UV_Channel.in}}}
  name ShuffleCopy1
  xpos 0
  ypos 360
 }
 Output {
  name Output1
  xpos 0
  ypos 506
 }
end_group
Noise {
 inputs 0
 center {1024 778}
 name Noise1
 xpos -326
 ypos -345
}
Luma_to_Normals {
 name Luma_to_Normals
 xpos -326
 ypos -266
 gain 11
}
Shuffle {
 blue black
 name Shuffle1
 label "in \[value in]-->out \[value out]"
 xpos -326
 ypos -240
}
Multiply {
 value 232
 name Multiply1
 xpos -326
 ypos -135
}
Blur {
 size 40
 name Blur1
 label "size \[value size]"
 xpos -326
 ypos -97
}
Group {
 inputs 0
 name Compression_Map_test
 xpos -1699
 ypos 106
}
 Input {
  inputs 0
  name Inputvector2
  xpos 536
  ypos -310
 }
 Dot {
  name Dot2
  tile_color 0xcccccc00
  xpos 570
  ypos -255
 }
set Nb3d3b00 [stack 0]
 Dot {
  name Dot1
  tile_color 0xcccccc00
  xpos 1003
  ypos -228
 }
set Nb3d8320 [stack 0]
 Expression {
  channel0 rgb
  expr0 "sqrt(pow2((x+r) - (x+1+r(x+1, y-1))) + pow2((y+g) - (y-1+g(x+1, y-1))))/1.41421"
  name Expression1
  xpos 1049
  ypos -126
 }
push $Nb3d8320
 Expression {
  channel0 rgb
  expr0 "sqrt(pow2((x+r) - (x-1+r(x-1, y-1))) + pow2((y+g) - (y-1+g(x-1, y-1))))/1.41421"
  name Expression6
  xpos 950
  ypos -126
 }
push 0
push $Nb3d8320
 Expression {
  channel0 rgb
  expr0 "sqrt(pow2((x+r) - (x-1+r(x-1, y+1))) + pow2((y+g) - (y+1+g(x-1, y+1))))/1.41421"
  name Expression7
  xpos 853
  ypos -126
 }
push $Nb3d8320
 Expression {
  channel0 rgb
  expr0 "sqrt(pow2((x+r) - (x+1+r(x+1, y+1))) + pow2((y+g) - (y+1+g(x+1, y+1))))/1.41421"
  name Expression8
  xpos 755
  ypos -126
 }
 Merge2 {
  inputs 4+1
  operation plus
  bbox B
  name Merge1
  xpos 923
  ypos -53
 }
 Multiply {
  value 0.5
  name Multiply2
  xpos 923
  ypos -27
 }
set Nb422e60 [stack 0]
push $Nb3d3b00
 Expression {
  channel0 rgb
  expr0 "sqrt(pow2((x+r) - (x+r(x, y-1))) + pow2((y+g) - (y-1+g(x, y-1))))"
  name Expression5
  xpos 615
  ypos -153
 }
push $Nb3d3b00
 Expression {
  channel0 rgb
  expr0 "sqrt(pow2((x+r) - (x-1+r(x-1, y))) + pow2((y+g) - (y+g(x-1, y))))"
  name Expression4
  xpos 517
  ypos -153
 }
push 0
push $Nb3d3b00
 Expression {
  channel0 rgb
  expr0 "sqrt(pow2((x+r) - (x+r(x, y+1))) + pow2((y+g) - (y+1+g(x, y+1))))"
  name Expression3
  xpos 420
  ypos -153
 }
push $Nb3d3b00
 Expression {
  channel0 rgb
  expr0 "sqrt(pow2((x+r) - (x+1+r(x+1, y))) + pow2((y+g) - (y+g(x+1, y))))"
  name Expression2
  xpos 322
  ypos -153
 }
 Merge2 {
  inputs 4+1
  operation plus
  bbox B
  name Merge7
  xpos 490
  ypos -80
 }
 Merge2 {
  inputs 2
  operation plus
  bbox B
  name Merge2
  xpos 490
  ypos -29
 }
 Multiply {
  value 0.1666666667
  name Multiply1
  xpos 490
  ypos 15
 }
 Output {
  name Output1
  xpos 490
  ypos 115
 }
push $Nb422e60
push $Nb3d3b00
 Viewer {
  inputs 2
  frame_range 1001-1296
  colour_sample_bbox {0.01171875 -0.384765625 0.0126953125 -0.3837890625}
  samplepoints {{0.01171875 -0.384765625}
    }
  name Viewer1
  xpos 1019
  ypos 21
 }
end_group
Group {
 inputs 0
 name STMap_Generator
 xpos -17
 ypos -310
 postage_stamp true
 addUserKnob {20 STMap l "ST Map"}
 addUserKnob {41 format l Format T Reformat1.format}
 addUserKnob {26 ""}
 addUserKnob {7 overscan l "Overscan (%)" t "Add overscan to your ST map" R 0 100}
 overscan 10
 addUserKnob {6 reformat l "Reformat to Overscan" t "Reformats the image to overscan size" +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {26 copyright l "" +STARTLINE T "v1.2 - Part of VectorTools"}
}
 Reformat {
  inputs 0
  name Reformat1
  xpos 555
  ypos 395
 }
 Crop {
  box {{-width*(parent.overscan/100)/2} {-height*(parent.overscan/100)/2} {width+(width*(parent.overscan/100)/2)} {height+(height*(parent.overscan/100)/2)}}
  reformat {{parent.reformat}}
  crop false
  name Crop1
  xpos 555
  ypos 446
 }
 Expression {
  expr0 (x+0.5)/width
  expr1 (y+.5)/height
  name Expression1
  xpos 555
  ypos 497
 }
 Output {
  name Output1
  xpos 555
  ypos 583
 }
end_group
Transform {
 scale 1.14
 center {1024 778}
 shutteroffset centred
 name Transform4
 label "\[if \{\[value translate.x] != 0 || \[value translate.y] != 0\} then \{return \"t \[value translate.x] \[value translate.y]\n\"\} else \{return \"\"\}]\[if \{\[value rotate] != 0\} then \{return \"r \[value rotate]\n\"\} else \{return \"\"\}] \[if \{\[value scale] != 1\} then \{return \"s \[value scale]\"\} else \{return \"\"\}]\[if \{\[value skewX] != 0 || \[value skewY] != 0\} then \{return \"sk \[value skewX] \[value skewY]\n\"\} else \{return \"\"\}]\[if \{\[value motionblur] != 0\} then \{return \"mb \[value motionblur] sh \[value shutter] \[value shutteroffset]\n\"\} else \{return \"\"\}]"
 xpos -17
 ypos -238
}
Mirror2 {
 flop true
 name Mirror2_1
 xpos -25
 ypos -189
 disable true
}
Crop {
 box {0 0 2048 1556}
 crop false
 name Crop1
 xpos -25
 ypos -163
}
set Nb9e2400 [stack 0]
Group {
 name UV_to_Vectors
 help "Transforms a distorted UV Map to Motion Vectors corresponding to the distortion."
 xpos -25
 ypos -37
 addUserKnob {20 UV_to_Vectors}
 addUserKnob {41 in l UV_Layer t "Select the layer containing your UV_map" T UV_Channel.in}
 addUserKnob {26 ""}
 addUserKnob {26 copyright l "" t www.erwanleroy.com +STARTLINE T "v1.0 - Part of VectorTools by Erwan Leroy - 2016"}
}
 Input {
  inputs 0
  name Input
  xpos -291
  ypos -63
 }
set Nb9f49d0 [stack 0]
 Shuffle {
  name UV_Channel
  xpos -151
  ypos -17
 }
 Expression {
  expr0 -x+r*width-0.5
  expr1 -y+g*height-0.5
  channel2 {-rgba.red -rgba.green -rgba.blue none}
  channel3 {none none none -rgba.alpha}
  name UV_to_Vectors1
  xpos -151
  ypos 97
 }
push $Nb9f49d0
 ShuffleCopy {
  inputs 2
  in2 none
  red red
  green green
  alpha black
  out {{{parent.UV_Channel.in}}}
  name ShuffleCopy1
  xpos -291
  ypos 97
 }
 Output {
  name Output1
  xpos -291
  ypos 167
 }
end_group
set Nb9ec3a0 [stack 0]
Transform {
 translate {282 -208}
 rotate 55
 scale 0.37
 center {1024 778}
 shutteroffset centred
 name Transform2
 label "\[if \{\[value translate.x] != 0 || \[value translate.y] != 0\} then \{return \"t \[value translate.x] \[value translate.y]\n\"\} else \{return \"\"\}]\[if \{\[value rotate] != 0\} then \{return \"r \[value rotate]\n\"\} else \{return \"\"\}] \[if \{\[value scale] != 1\} then \{return \"s \[value scale]\"\} else \{return \"\"\}]\[if \{\[value skewX] != 0 || \[value skewY] != 0\} then \{return \"sk \[value skewX] \[value skewY]\n\"\} else \{return \"\"\}]\[if \{\[value motionblur] != 0\} then \{return \"mb \[value motionblur] sh \[value shutter] \[value shutteroffset]\n\"\} else \{return \"\"\}]"
 xpos 161
 ypos 3
}
push $Nb9ec3a0
VectorTransform {
 name VectorTransform
 xpos 104
 ypos 110
 translate {282 -208}
 rotate 73
 scale 0.136
 center {1024 778}
 shutteroffset centred
}
set Nba39970 [stack 0]
ColorWheel {
 inputs 0
 gamma 0.45
 name ColorWheel1
 xpos 437
 ypos -91
}
Transform {
 scale 1.65
 center {1024 778}
 shutteroffset centred
 name Transform3
 label "\[if \{\[value translate.x] != 0 || \[value translate.y] != 0\} then \{return \"t \[value translate.x] \[value translate.y]\n\"\} else \{return \"\"\}]\[if \{\[value rotate] != 0\} then \{return \"r \[value rotate]\n\"\} else \{return \"\"\}] \[if \{\[value scale] != 1\} then \{return \"s \[value scale]\"\} else \{return \"\"\}]\[if \{\[value skewX] != 0 || \[value skewY] != 0\} then \{return \"sk \[value skewX] \[value skewY]\n\"\} else \{return \"\"\}]\[if \{\[value motionblur] != 0\} then \{return \"mb \[value motionblur] sh \[value shutter] \[value shutteroffset]\n\"\} else \{return \"\"\}]"
 xpos 437
 ypos -19
}
CheckerBoard2 {
 inputs 0
 name CheckerBoard1
 xpos 307
 ypos -146
}
Merge2 {
 inputs 2
 operation plus
 bbox B
 mix 0.29
 name Merge1
 xpos 276
 ypos 4
}
Copy {
 inputs 2
 from0 rgba.red
 to0 forward.u
 from1 rgba.green
 to1 forward.v
 bbox B
 name Copy1
 xpos 242
 ypos 148
}
set Nbaa9040 [stack 0]
IDistort {
 uv motion
 name IDistort1
 xpos 327
 ypos 234
}
push $Nbaa9040
Dot {
 name Dot1
 tile_color 0x9e3c6300
 xpos 74
 ypos 254
}
push 0
push 0
push $Nbaa9040
Kronos {
 inputs 4
 retimedChannels all
 timingOutputSpeed 1
 showLegacyMode false
 motionEstimation Regularized
 Advanced 1
 legacyModeNuke9 false
 vectorSpacing 50
 showVectors true
 name Kronos1
 xpos 198
 ypos 311
}
push $Nba39970
Group {
 name Vectors_to_UV
 xpos 47
 ypos 160
 addUserKnob {20 VtoU l "Vectors to UV"}
 addUserKnob {41 in l Vector_Layer t "Pick the layer containing your motion vectors." T UV_Channel.in}
 addUserKnob {26 ""}
 addUserKnob {26 copyright l "" t www.erwanleroy.com +STARTLINE T "v1.0 - Part of VectorTools by Erwan Leroy - 2016"}
}
 Input {
  inputs 0
  name Input
  xpos -303
  ypos 114
 }
set N10435de0 [stack 0]
 Shuffle {
  name UV_Channel
  xpos -163
  ypos 114
 }
 Expression {
  expr0 (r+x+0.5)/width
  expr1 (g+y+0.5)/height
  channel2 {-rgba.red -rgba.green -rgba.blue none}
  channel3 {none none none -rgba.alpha}
  name Vectors_to_UV
  xpos -163
  ypos 228
 }
push $N10435de0
 ShuffleCopy {
  inputs 2
  in2 none
  red red
  green green
  alpha black
  out {{{parent.UV_Channel.in}}}
  name ShuffleCopy1
  xpos -303
  ypos 228
 }
 Output {
  name Output1
  xpos -303
  ypos 299
 }
end_group
push $Nb9e2400
Transform {
 translate {282 -208}
 rotate 55
 scale 0.37
 center {1024 778}
 shutteroffset centred
 name Transform1
 label "\[if \{\[value translate.x] != 0 || \[value translate.y] != 0\} then \{return \"t \[value translate.x] \[value translate.y]\n\"\} else \{return \"\"\}]\[if \{\[value rotate] != 0\} then \{return \"r \[value rotate]\n\"\} else \{return \"\"\}] \[if \{\[value scale] != 1\} then \{return \"s \[value scale]\"\} else \{return \"\"\}]\[if \{\[value skewX] != 0 || \[value skewY] != 0\} then \{return \"sk \[value skewX] \[value skewY]\n\"\} else \{return \"\"\}]\[if \{\[value motionblur] != 0\} then \{return \"mb \[value motionblur] sh \[value shutter] \[value shutteroffset]\n\"\} else \{return \"\"\}]"
 xpos 153
 ypos -114
}
Group {
 inputs 0
 name TransformVector2_
 help "Transforms an image assuming it is a motion vector in RGBA.\nCompared to a regular transform, this will edit the pixel colors to compensate for vector direction and magnitude.\n\nWarning: This node breaks concatenation."
 tile_color 0xc692ccff
 xpos -2213
 ypos 439
 addUserKnob {20 transform l "Transform Vector2"}
 addUserKnob {41 matrix T Transform1.matrix}
 addUserKnob {41 translate T Transform1.translate}
 addUserKnob {41 rotate T Transform1.rotate}
 addUserKnob {41 scale T Transform1.scale}
 addUserKnob {41 skewX l "skew X" T Transform1.skewX}
 addUserKnob {41 skewY l "skew Y" T Transform1.skewY}
 addUserKnob {41 skew_order l "skew order" T Transform1.skew_order}
 addUserKnob {41 center T Transform1.center}
 addUserKnob {41 invert_matrix l invert T Transform1.invert_matrix}
 addUserKnob {41 filter T Transform1.filter}
 addUserKnob {41 clamp -STARTLINE T Transform1.clamp}
 addUserKnob {41 black_outside l "black outside" -STARTLINE T Transform1.black_outside}
 addUserKnob {41 motionblur T Transform1.motionblur}
 addUserKnob {41 shutter T Transform1.shutter}
 addUserKnob {41 shutteroffset l "shutter offset" T Transform1.shutteroffset}
 addUserKnob {41 shuttercustomoffset l "" -STARTLINE T Transform1.shuttercustomoffset}
 addUserKnob {26 ""}
 addUserKnob {26 copyright l "" t www.erwanleroy.com +STARTLINE T "v1.1 - Part of VectorTools by Erwan Leroy - 2016"}
}
 Input {
  inputs 0
  name vectorB
  xpos -482
  ypos -5
 }
set N10484250 [stack 0]
 Transform {
  center {1024 778}
  shutteroffset centred
  name Transform1
  xpos -482
  ypos 92
 }
set N10488c40 [stack 0]
 ColorMatrix {
  matrix {
      {{"\[python nuke.toNode('Transform1')\\\['matrix'\\].value()\\\[0\\]]"} {"\[python nuke.toNode('Transform1')\\\['matrix'\\].value()\\\[4\\]]"} 0}
      {{"\[python nuke.toNode('Transform1')\\\['matrix'\\].value()\\\[1\\]]"} {"\[python nuke.toNode('Transform1')\\\['matrix'\\].value()\\\[5\\]]"} 0}
      {0 0 0}
    }
  name ColorMatrix1
  xpos -482
  ypos 172
 }
 Output {
  name Output1
  xpos -482
  ypos 232
 }
push $N10488c40
push $N10484250
 Viewer {
  inputs 2
  frame_range 1001-1296
  name Viewer1
  xpos -191
  ypos 172
 }
end_group
Group {
 inputs 0
 name CrossProductVector3_
 help "Calculates the cross product of 2 Vector3 inputs."
 xpos -2213
 ypos 261
 addUserKnob {20 main_tab l "Cross Product Vector3"}
 addUserKnob {41 in l "Vector B Layer" t "Layer containing the vector information for input B" T vector_layer.in}
 addUserKnob {41 in_1 l "Vector A Layer" t "Layer containing the vector information for input A" T vector_layer1.in}
 addUserKnob {26 ""}
 addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
}
 Input {
  inputs 0
  name vectorA
  xpos 457
  ypos -6
  number 1
 }
 Shuffle {
  name vector_layer1
  xpos 457
  ypos 103
 }
 Remove {
  operation keep
  channels rgba
  name Remove2
  xpos 457
  ypos 129
 }
 Dot {
  name Dot3
  tile_color 0x9e3c6300
  xpos 491
  ypos 210
 }
 Input {
  inputs 0
  name vectorB
  xpos 0
 }
 Dot {
  name Dot1
  tile_color 0xcccccc00
  xpos 34
  ypos 108
 }
set N104f54a0 [stack 0]
 Shuffle {
  name vector_layer
  xpos 140
  ypos 104
 }
 Remove {
  operation keep
  channels rgba
  name Remove1
  xpos 140
  ypos 130
 }
 MergeExpression {
  inputs 2
  expr0 "Ag*Bb - Ab*Bg"
  expr1 "Ab*Br - Ar*Bb"
  expr2 "Ar*Bg - Ag*Br"
  name MergeExpression2
  xpos 140
  ypos 206
 }
 Dot {
  name Dot2
  tile_color 0x4b5ec600
  xpos 174
  ypos 364
 }
push $N104f54a0
 ShuffleCopy {
  inputs 2
  in2 none
  red red
  green green
  blue blue
  out {{{parent.UV_Channel.in}}}
  name ShuffleCopy1
  xpos 0
  ypos 360
 }
 Output {
  name Output1
  xpos 0
  ypos 506
 }
end_group
Group {
 inputs 0
 name RotateVector2_
 help "Rotate a 2D vector on the same 2D plane."
 knobChanged "\nnode = nuke.thisNode()\nknob = nuke.thisKnob()\nif knob.name() == \"mode\":\n    if knob.value() == \"Knob (Degrees 0-360)\":\n        node\['angle'].setEnabled(True)\n    else:\n        node\['angle'].setEnabled(False)\n"
 xpos -2212
 ypos 322
 addUserKnob {20 main_tab l "Rotate Vector2"}
 addUserKnob {41 in l "Vector B Layer" t "Layer containing the vector information for input B" T vector_layer.in}
 addUserKnob {4 mode l "Rotate by" t "Pick whether to rotate the input vector by:\nKnob (Degrees 0-360)\nAngle Map (Degrees 0-360)\nAngle Map (Degrees 0-1)\nAngle Map (Radians)\n\nAn Angle map is a single channel image (expected in red channel) that represents an angle value at each pixel." M {"Knob (Degrees 0-360)" "Angle Map (Degrees 0-360)" "Angle Map (Degrees 0-1)" "Angle Map (Radians)" "" "" ""}}
 addUserKnob {26 ""}
 addUserKnob {7 angle l Angle R -180 180}
 addUserKnob {26 ""}
 addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
}
 Input {
  inputs 0
  name angleMap
  xpos 479
  ypos 5
  number 1
 }
 Multiply {
  channels rgb
  value 360
  name Multiply_360
  xpos 479
  ypos 90
  disable {{parent.mode!=2}}
 }
 Expression {
  expr0 radians(r)
  name Degrees_to_Radians
  xpos 479
  ypos 132
  disable {{parent.mode==3}}
 }
 Dot {
  name Dot5
  tile_color 0xcccccc00
  xpos 513
  ypos 249
 }
 Input {
  inputs 0
  name vectorB
  xpos 0
 }
 Dot {
  name Dot1
  tile_color 0xcccccc00
  xpos 34
  ypos 108
 }
set N10568ba0 [stack 0]
 Shuffle {
  name vector_layer
  xpos 140
  ypos 104
 }
 Remove {
  operation keep
  channels rgba
  name Remove1
  xpos 140
  ypos 130
 }
 Dot {
  name Dot3
  tile_color 0x9e3c6300
  xpos 174
  ypos 181
 }
set N10585c60 [stack 0]
 Dot {
  name Dot4
  tile_color 0x9e3c6300
  xpos 372
  ypos 181
 }
 MergeExpression {
  inputs 2
  expr0 "Br * cos(Ar) - Bg * sin(Ar)"
  expr1 "Br * sin(Ar) + Bg * cos(Ar)"
  name MergeExpression1
  xpos 338
  ypos 245
 }
 Dot {
  name Dot6
  tile_color 0x4b5ec600
  xpos 372
  ypos 311
 }
push $N10585c60
 Expression {
  temp_name0 angleRad
  temp_expr0 radians(parent.angle)
  expr0 "r * cos(angleRad) - g * sin(angleRad)"
  expr1 "r * sin(angleRad) + g * cos(angleRad)"
  name Rotation
  xpos 140
  ypos 240
 }
 Switch {
  inputs 2
  which {{parent.mode!=0}}
  name Switch1
  xpos 140
  ypos 307
 }
 Dot {
  name Dot2
  tile_color 0xcccccc00
  xpos 174
  ypos 364
 }
push $N10568ba0
 ShuffleCopy {
  inputs 2
  in2 none
  red red
  green green
  blue blue
  out {{{parent.UV_Channel.in}}}
  name ShuffleCopy1
  xpos 0
  ypos 360
 }
 Output {
  name Output1
  xpos 0
  ypos 506
 }
end_group
Axis2 {
 inputs 0
 useMatrix true
 matrix {
     {1.3333 -0.6667 0 0}
     {-0.6667 1.3333 0 0}
     {0 0 1 0}
     {0 0 0 1}
   }
 name Axis2
 xpos -839
 ypos 476
}
Axis2 {
 useMatrix true
 matrix {
     {1 0.5 0 0}
     {0.5 1 0 0}
     {0 0 1 0}
     {0 0 0 1}
   }
 name Axis1
 xpos -743
 ypos 427
}
Cube {
 inputs 0
 name Cube1
 xpos -628
 ypos 457
}
TransformGeo {
 inputs 2
 name TransformGeo1
 xpos -628
 ypos 518
}
Group {
 inputs 0
 name MultiplyVector3Matrix3_
 help "Multiply (transform) a Vector3 by a Matrix3. This is the equivalent of applying Rotation/Scale/Skew from a Matrix to the vector.\nA Matrix4 can be used, but the last row/column will be ignored."
 xpos -2221
 ypos -128
 addUserKnob {20 main_tab l "Mutiply Vector3 Matrix3"}
 addUserKnob {26 ""}
 addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
}
 Input {
  inputs 0
  name InputMatrix3
  xpos 402
  ypos 7
  number 1
 }
 Dot {
  name Dot3
  tile_color 0xcccccc00
  xpos 436
  ypos 62
 }
add_layer {matrix0 matrix0.0 matrix0.1 matrix0.2 matrix0.3}
 Shuffle {
  in matrix0
  name Shuffle1
  label "in \[value in]-->out \[value out]"
  xpos 402
  ypos 109
 }
set N1076df70 [stack 0]
add_layer {matrix1 matrix1.0 matrix1.1 matrix1.2 matrix1.3}
 Shuffle {
  in matrix1
  name Shuffle2
  label "in \[value in]-->out \[value out]"
  xpos 402
  ypos 147
 }
set N1077e330 [stack 0]
add_layer {matrix2 matrix2.0 matrix2.1 matrix2.2 matrix2.3}
 Shuffle {
  in matrix2
  name Shuffle3
  label "in \[value in]-->out \[value out]"
  xpos 402
  ypos 185
 }
set N1078e650 [stack 0]
add_layer {matrix3 matrix3.0 matrix3.1 matrix3.2 matrix3.3}
 Shuffle {
  in matrix3
  name Shuffle4
  label "in \[value in]-->out \[value out]"
  xpos 402
  ypos 223
 }
push $N1078e650
 Dot {
  name Dot7
  tile_color 0x9e3c6300
  xpos 343
  ypos 195
 }
push $N1077e330
 Dot {
  name Dot6
  tile_color 0x9e3c6300
  xpos 343
  ypos 157
 }
push $N1076df70
 Dot {
  name Dot5
  tile_color 0x9e3c6300
  xpos 343
  ypos 119
 }
 Input {
  inputs 0
  name InputVector3
  xpos 219
  ypos 8
 }
 Dot {
  name Dot4
  tile_color 0xcccccc00
  xpos 253
  ypos 115
 }
 BlinkScript {
  inputs 4
  recompileCount 12
  ProgramGroup 1
  KernelDescription "2 \"TransformVector3byMatrix3\" iterate pixelWise 156e29276da8287b847626148a2a784d9969b7d1a3ad81e28187d00a7aaafaca 5 \"src\" Read Point \"matrix0\" Read Point \"matrix1\" Read Point \"matrix2\" Read Point \"dst\" Write Point 0 0 0"
  kernelSource "kernel TransformVector3byMatrix3 : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> src; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix0; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix1; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix2; // the input image\n  Image<eWrite> dst; // the output image\n\n  void process() \{\n    // Read the input image\n    SampleType(src) input = src();\n    SampleType(matrix0) m0 = matrix0();\n    SampleType(matrix1) m1 = matrix1();\n    SampleType(matrix2) m2 = matrix2();\n\n    // Create the matrix object (matrix3 in this case)\n    float3x3  matrix;\n    matrix\[0]\[0] = m0.x;\n    matrix\[0]\[1] = m0.y;\n    matrix\[0]\[2] = m0.z;\n    matrix\[1]\[0] = m1.x;\n    matrix\[1]\[1] = m1.y;\n    matrix\[1]\[2] = m1.z;\n    matrix\[2]\[0] = m2.x;\n    matrix\[2]\[1] = m2.y;\n    matrix\[2]\[2] = m2.z;\n\n    // Multiply the Matrix and the Vector\n    float3 vector(input.x, input.y, input.z);\n    vector = matrix*vector;\n\n    // Write the result to the output image\n    dst() = float4(vector.x, vector.y, vector.z, input.w);\n  \}\n\};\n"
  rebuild ""
  rebuild_finalise ""
  name BlinkScript1
  xpos 219
  ypos 223
 }
 Output {
  name Output1
  xpos 219
  ypos 323
 }
end_group
Group {
 inputs 0
 name Product_Matrix4_
 xpos -2214
 ypos 717
 addUserKnob {20 Matrix4Product l "Product Matrix4"}
}
 Input {
  inputs 0
  name matrixA
  xpos 344
  ypos 139
 }
 Dot {
  name Dot3
  xpos 378
  ypos 252
 }
set N1080cd70 [stack 0]
push $N1080cd70
push $N1080cd70
push $N1080cd70
 Input {
  inputs 0
  name matrixB
  xpos 21
  ypos 142
  number 1
 }
 MergeExpression {
  inputs 2
  channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
  expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
  channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
  expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
  channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
  expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
  channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
  expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
  name MergeExpression1
  xpos 21
  ypos 249
 }
 MergeExpression {
  inputs 2
  channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
  expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
  channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
  expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
  channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
  expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
  channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
  expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
  name MergeExpression2
  xpos 21
  ypos 273
 }
 MergeExpression {
  inputs 2
  channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
  expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
  channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
  expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
  channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
  expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
  channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
  expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
  name MergeExpression3
  xpos 21
  ypos 297
 }
 MergeExpression {
  inputs 2
  channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
  expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
  channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
  expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
  channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
  expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
  channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
  expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
  name MergeExpression4
  xpos 21
  ypos 321
 }
 Output {
  name Output1
  xpos 21
  ypos 421
 }
end_group
Group {
 inputs 0
 name TransformMatrix4
 xpos -2220
 ypos 808
 addUserKnob {20 Matrix4x4_Transform}
 addUserKnob {41 xform_order l "transform order" T Axis1.xform_order}
 addUserKnob {41 rot_order l "rotation order" T Axis1.rot_order}
 addUserKnob {41 translate T Axis1.translate}
 addUserKnob {41 rotate T Axis1.rotate}
 addUserKnob {41 scaling l scale T Axis1.scaling}
 addUserKnob {41 uniform_scale l "uniform scale" T Axis1.uniform_scale}
 addUserKnob {41 skew T Axis1.skew}
 addUserKnob {41 pivot T Axis1.pivot}
 addUserKnob {20 "" l "Local matrix" n 2}
 addUserKnob {41 useMatrix l "specify matrix" T Axis1.useMatrix}
 addUserKnob {41 matrix l "" +STARTLINE T Axis1.matrix}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0xaaaaaa00
  label "Transform\nTo Matrix"
  note_font_size 20
  xpos 764
  ypos 251
  bdwidth 218
  bdheight 180
 }
 Input {
  inputs 0
  name matrix
  xpos 451
  ypos 137
 }
 Dot {
  name Dot1
  xpos 485
  ypos 195
 }
set N10861960 [stack 0]
 Dot {
  name Dot2
  xpos 808
  ypos 195
 }
 Expression {
  channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
  expr0 Axis1.world_matrix.0
  channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
  expr1 Axis1.world_matrix.1
  channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
  expr2 Axis1.world_matrix.2
  channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
  expr3 Axis1.world_matrix.3
  name Expression1
  xpos 774
  ypos 331
 }
 Expression {
  channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
  expr0 Axis1.world_matrix.4
  channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
  expr1 Axis1.world_matrix.5
  channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
  expr2 Axis1.world_matrix.6
  channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
  expr3 Axis1.world_matrix.7
  name Expression2
  xpos 774
  ypos 355
 }
 Expression {
  channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
  expr0 Axis1.world_matrix.8
  channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
  expr1 Axis1.world_matrix.9
  channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
  expr2 Axis1.world_matrix.10
  channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
  expr3 Axis1.world_matrix.11
  name Expression3
  xpos 774
  ypos 379
 }
 Expression {
  channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
  expr0 Axis1.world_matrix.12
  channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
  expr1 Axis1.world_matrix.13
  channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
  expr2 Axis1.world_matrix.14
  channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
  expr3 Axis1.world_matrix.15
  name Expression4
  xpos 774
  ypos 403
 }
 Dot {
  name Dot3
  xpos 808
  ypos 574
 }
set N108a11d0 [stack 0]
push $N10861960
push $N108a11d0
 Group {
  inputs 2
  name Product_Matrix4_
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 451
  ypos 571
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set N108b28f0 [stack 0]
push $N108b28f0
push $N108b28f0
push $N108b28f0
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Switch {
  inputs 2
  which {{"\[exists parent.input]"}}
  name HasInput
  xpos 451
  ypos 788
 }
 Output {
  name Output1
  xpos 451
  ypos 852
 }
 Input {
  inputs 0
  name axis
  xpos 1041
  ypos 158
  number 1
 }
 Dot {
  name Dot4
  tile_color 0xcccccc00
  xpos 1075
  ypos 370
 }
 Axis2 {
  name Axis1
  xpos 912
  ypos 346
  addUserKnob {20 wpp}
  addUserKnob {18 pointPosition l "Point Position"}
  pointPosition {0 0 0}
  addUserKnob {6 pointPosition_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 pointPosition_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 pointPosition_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 pointPosition_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 }
end_group
Group {
 inputs 0
 name TranslateMatrix4_
 xpos -2222
 ypos 1054
 addUserKnob {20 Matrix4x4_Translate}
}
 Input {
  inputs 0
  name vector
  xpos 491
  ypos 155
  number 1
 }
 Dot {
  name Dot1
  xpos 525
  ypos 252
 }
 Input {
  inputs 0
  name matrix
  xpos 344
  ypos 161
 }
 MergeExpression {
  inputs 2
  channel0 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
  expr0 matrix0.3+Ar
  channel1 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
  expr1 matrix1.3+Ag
  channel2 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
  expr2 matrix2.3+Ab
  channel3 none
  name MergeExpression1
  xpos 344
  ypos 249
 }
 Output {
  name Output1
  xpos 344
  ypos 349
 }
end_group
Group {
 inputs 0
 name ScaleMatrix4_
 xpos -2221
 ypos 1007
 addUserKnob {20 Matrix4x4_Scale}
}
 Input {
  inputs 0
  name vector
  xpos 491
  ypos 162
  number 1
 }
 Dot {
  name Dot1
  xpos 525
  ypos 252
 }
 Input {
  inputs 0
  name matrix
  xpos 344
  ypos 161
 }
 MergeExpression {
  inputs 2
  channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
  expr0 matrix0.0*Ar
  channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
  expr1 matrix1.1*Ag
  channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
  expr2 matrix2.2*Ab
  channel3 none
  name MergeExpression1
  xpos 344
  ypos 249
 }
 Output {
  name Output1
  xpos 344
  ypos 349
 }
end_group
Group {
 inputs 0
 name RotateVector3_
 help "Rotate a Vector3 in 3 dimensions."
 knobChanged "node = nuke.thisNode()\nknob = nuke.thisKnob()\nif knob.name() == \"mode\":\n    if knob.value() == \"Knob\":\n        node\['rotate'].setEnabled(True)\n        node\['rot_order'].setEnabled(True)\n    else:\n        node\['rotate'].setEnabled(False)\n        node\['rot_order'].setEnabled(False)\n"
 xpos -2213
 ypos 379
 addUserKnob {20 main_tab l TemplateMatrix4}
 addUserKnob {41 in l "Vector B Layer" t "Layer containing the vector information for input B" T vector_layer.in}
 addUserKnob {4 mode l "Rotate by" t "Either control the rotation by the knob present on this node, or via the Matrix input." M {Knob "Pixel Matrix" ""}}
 addUserKnob {26 ""}
 addUserKnob {4 rot_order l "rotation order" t "Specifies the order to apply euler angles to the rotation." M {XYZ XZY YXZ YZX ZXY ZYX "" "" ""}}
 rot_order ZXY
 addUserKnob {13 rotate}
 addUserKnob {26 ""}
 addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
}
 Input {
  inputs 0
  name vectorB
  xpos 0
  ypos -30
 }
 Dot {
  name Dot1
  tile_color 0xcccccc00
  xpos 34
  ypos 72
 }
set N11273d90 [stack 0]
 Shuffle {
  name vector_layer
  xpos 366
  ypos 68
 }
 Remove {
  operation keep
  channels rgba
  name Remove1
  xpos 366
  ypos 94
 }
 Dot {
  name Dot3
  tile_color 0x9e3c6300
  xpos 400
  ypos 156
 }
set N11290e60 [stack 0]
 Dot {
  name Dot6
  tile_color 0x9e3c6300
  xpos 220
  ypos 156
 }
 Group {
  name Magnitude_Vector3_
  help "Calculate the magnitude (scalar) of an input Vector3."
  xpos 186
  ypos 231
  addUserKnob {20 main_tab l "Magnitude Vector3"}
  addUserKnob {41 in l "Vector B Layer" t "Layer containing the vector information for input B" T vector_layer.in}
  addUserKnob {26 ""}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name vectorB
   xpos 0
  }
  Dot {
   name Dot1
   tile_color 0xcccccc00
   xpos 34
   ypos 108
  }
set N112a6ed0 [stack 0]
  Shuffle {
   name vector_layer
   xpos 140
   ypos 104
  }
  Remove {
   operation keep
   channels rgba
   name Remove1
   xpos 140
   ypos 130
  }
  Expression {
   channel0 rgba
   expr0 sqrt((r*r)+(g*g)+(b*b))
   channel2 {-rgba.red -rgba.green -rgba.blue none}
   channel3 {none none none -rgba.alpha}
   name Mag3
   xpos 140
   ypos 227
  }
  Dot {
   name Dot2
   tile_color 0xcccccc00
   xpos 174
   ypos 364
  }
push $N112a6ed0
  ShuffleCopy {
   inputs 2
   in2 none
   red red
   green green
   blue blue
   out {{{parent.UV_Channel.in}}}
   name ShuffleCopy1
   xpos 0
   ypos 360
  }
  Output {
   name Output1
   xpos 0
   ypos 506
  }
 end_group
 Dot {
  name Dot7
  tile_color 0xcccccc00
  xpos 220
  ypos 529
 }
push $N11290e60
 Dot {
  name Dot4
  tile_color 0x9e3c6300
  xpos 556
  ypos 156
 }
set N112ef540 [stack 0]
 Input {
  inputs 0
  name matrix
  xpos 614
  ypos -30
  number 1
 }
 CopyBBox {
  inputs 2
  name CopyBBox1
  xpos 614
  ypos 152
 }
push $N112ef540
 Dot {
  name Dot5
  tile_color 0x9e3c6300
  xpos 556
  ypos 198
 }
 Group {
  inputs 2
  name MultiplyVector3Matrix3_2
  help "Multiply (transform) a Vector3 by a Matrix3. This is the equivalent of applying Rotation/Scale/Skew from a Matrix to the vector.\nA Matrix4 can be used, but the last row/column will be ignored."
  xpos 614
  ypos 195
  addUserKnob {20 main_tab l "Mutiply Vector3 Matrix3"}
  addUserKnob {26 ""}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name InputMatrix3
   xpos 402
   ypos 7
   number 1
  }
  Dot {
   name Dot3
   tile_color 0xcccccc00
   xpos 436
   ypos 62
  }
  Shuffle {
   in matrix0
   name Shuffle1
   label "in \[value in]-->out \[value out]"
   xpos 402
   ypos 109
  }
set N11315bc0 [stack 0]
  Shuffle {
   in matrix1
   name Shuffle2
   label "in \[value in]-->out \[value out]"
   xpos 402
   ypos 147
  }
set N11326020 [stack 0]
  Shuffle {
   in matrix2
   name Shuffle3
   label "in \[value in]-->out \[value out]"
   xpos 402
   ypos 185
  }
set N11336310 [stack 0]
  Shuffle {
   in matrix3
   name Shuffle4
   label "in \[value in]-->out \[value out]"
   xpos 402
   ypos 223
  }
push $N11336310
  Dot {
   name Dot7
   tile_color 0x9e3c6300
   xpos 343
   ypos 195
  }
push $N11326020
  Dot {
   name Dot6
   tile_color 0x9e3c6300
   xpos 343
   ypos 157
  }
push $N11315bc0
  Dot {
   name Dot5
   tile_color 0x9e3c6300
   xpos 343
   ypos 119
  }
  Input {
   inputs 0
   name InputVector3
   xpos 219
   ypos 8
  }
  Dot {
   name Dot4
   tile_color 0xcccccc00
   xpos 253
   ypos 115
  }
  BlinkScript {
   inputs 4
   recompileCount 12
   ProgramGroup 1
   KernelDescription "2 \"TransformVector3byMatrix3\" iterate pixelWise 156e29276da8287b847626148a2a784d9969b7d1a3ad81e28187d00a7aaafaca 5 \"src\" Read Point \"matrix0\" Read Point \"matrix1\" Read Point \"matrix2\" Read Point \"dst\" Write Point 0 0 0"
   kernelSource "kernel TransformVector3byMatrix3 : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> src; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix0; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix1; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix2; // the input image\n  Image<eWrite> dst; // the output image\n\n  void process() \{\n    // Read the input image\n    SampleType(src) input = src();\n    SampleType(matrix0) m0 = matrix0();\n    SampleType(matrix1) m1 = matrix1();\n    SampleType(matrix2) m2 = matrix2();\n\n    // Create the matrix object (matrix3 in this case)\n    float3x3  matrix;\n    matrix\[0]\[0] = m0.x;\n    matrix\[0]\[1] = m0.y;\n    matrix\[0]\[2] = m0.z;\n    matrix\[1]\[0] = m1.x;\n    matrix\[1]\[1] = m1.y;\n    matrix\[1]\[2] = m1.z;\n    matrix\[2]\[0] = m2.x;\n    matrix\[2]\[1] = m2.y;\n    matrix\[2]\[2] = m2.z;\n\n    // Multiply the Matrix and the Vector\n    float3 vector(input.x, input.y, input.z);\n    vector = matrix*vector;\n\n    // Write the result to the output image\n    dst() = float4(vector.x, vector.y, vector.z, input.w);\n  \}\n\};\n"
   rebuild ""
   rebuild_finalise ""
   name BlinkScript1
   xpos 219
   ypos 223
  }
  Output {
   name Output1
   xpos 219
   ypos 323
  }
 end_group
 Dot {
  name Dot2
  tile_color 0xcccccc00
  xpos 648
  ypos 364
 }
push $N11290e60
 ColorMatrix {
  matrix {
      {{Axis1.world_matrix.0} {Axis1.world_matrix.1} {Axis1.world_matrix.2}}
      {{Axis1.world_matrix.4} {Axis1.world_matrix.5} {Axis1.world_matrix.6}}
      {{Axis1.world_matrix.8} {Axis1.world_matrix.9} {Axis1.world_matrix.10}}
    }
  name ColorMatrix1
  xpos 366
  ypos 269
 }
 Switch {
  inputs 2
  which {{parent.mode}}
  name Switch1
  xpos 366
  ypos 360
 }
 Group {
  name NormalizeVector3_
  help "Normalize the magnitude of a Vector3 (to be of magnitude 1)"
  xpos 366
  ypos 450
  addUserKnob {20 main_tab l "Normalize Vector3"}
  addUserKnob {41 in l "Vector B Layer" t "Layer containing the vector information for input B" T vector_layer.in}
  addUserKnob {26 ""}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name vectorB
   xpos 0
  }
  Dot {
   name Dot1
   tile_color 0xcccccc00
   xpos 34
   ypos 108
  }
set N113a8480 [stack 0]
  Shuffle {
   name vector_layer
   xpos 140
   ypos 104
  }
  Remove {
   operation keep
   channels rgba
   name Remove1
   xpos 140
   ypos 130
  }
  Dot {
   name Dot3
   tile_color 0x9e3c6300
   xpos 174
   ypos 156
  }
set N113c5560 [stack 0]
push $N113c5560
  Dot {
   name Dot4
   tile_color 0x9e3c6300
   xpos 377
   ypos 156
  }
  Expression {
   channel0 rgba
   expr0 sqrt((r*r)+(g*g)+(b*b))
   channel2 {-rgba.red -rgba.green -rgba.blue none}
   channel3 {none none none -rgba.alpha}
   name Mag3
   xpos 343
   ypos 209
  }
  Dot {
   name Dot5
   tile_color 0xcccccc00
   xpos 377
   ypos 271
  }
  Merge2 {
   inputs 2
   operation divide
   bbox B
   name Merge1
   xpos 140
   ypos 267
  }
  Dot {
   name Dot2
   tile_color 0x4b5ec600
   xpos 174
   ypos 364
  }
push $N113a8480
  ShuffleCopy {
   inputs 2
   in2 none
   red red
   green green
   blue blue
   out {{{parent.UV_Channel.in}}}
   name ShuffleCopy1
   xpos 0
   ypos 360
  }
  Output {
   name Output1
   xpos 0
   ypos 506
  }
 end_group
 Merge2 {
  inputs 2
  operation multiply
  bbox B
  name Merge1
  xpos 366
  ypos 525
 }
 Dot {
  name Dot8
  tile_color 0x4b5ec600
  xpos 400
  ypos 601
 }
push $N11273d90
 ShuffleCopy {
  inputs 2
  in2 none
  red red
  green green
  blue blue
  out {{{parent.UV_Channel.in}}}
  name ShuffleCopy1
  xpos 0
  ypos 597
 }
 Output {
  name Output1
  xpos 0
  ypos 671
 }
 Axis2 {
  inputs 0
  rot_order {{parent.rot_order x1 2}}
  rotate {{parent.rotate.x} {parent.rotate.y} {parent.rotate.z}}
  name Axis1
  xpos 471
  ypos 252
 }
end_group
Group {
 inputs 0
 name InvertMatrix4_1
 help "Invert a pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
 knobChanged "node = nuke.thisNode()\nknob = nuke.thisKnob()\n\nif knob.name() == \"inputChange\":\n    with node:\n        format_knob = nuke.toNode('Constant1')\['format']\n    if node.input(0):\n        format_knob.setEnabled(False)\n    else:\n        format_knob.setEnabled(True)\n"
 xpos -2212
 ypos 645
 addUserKnob {20 Matrix4 l InvertMatrix4}
 addUserKnob {26 Description l "" +STARTLINE T "Invert matrix channels"}
 addUserKnob {26 divider_copyright l "" +STARTLINE}
 addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
}
 Input {
  inputs 0
  name Inputmatrix
  xpos 276
  ypos 144
 }
 Dot {
  name Dot3
  tile_color 0xcccccc00
  xpos 310
  ypos 296
 }
set N11452e70 [stack 0]
 Dot {
  name Dot20
  tile_color 0xcccccc00
  xpos 456
  ypos 296
 }
 Shuffle {
  in matrix0
  name Shuffle1
  label "in \[value in]-->out \[value out]"
  xpos 422
  ypos 343
 }
set N1145bfe0 [stack 0]
 Shuffle {
  in matrix1
  name Shuffle2
  label "in \[value in]-->out \[value out]"
  xpos 422
  ypos 383
 }
set N1146c380 [stack 0]
 Shuffle {
  in matrix2
  name Shuffle3
  label "in \[value in]-->out \[value out]"
  xpos 422
  ypos 419
 }
set N1147c6a0 [stack 0]
 Shuffle {
  in matrix3
  name Shuffle4
  label "in \[value in]-->out \[value out]"
  xpos 422
  ypos 456
 }
 Dot {
  name Dot8
  tile_color 0x9e3c6300
  xpos 707
  ypos 465
 }
set N1149cd10 [stack 0]
 Dot {
  name Dot11
  tile_color 0x9e3c6300
  xpos 831
  ypos 465
 }
set N114a1450 [stack 0]
 Dot {
  name Dot12
  tile_color 0x9e3c6300
  xpos 965
  ypos 465
 }
set N114a5e30 [stack 0]
 Dot {
  name Dot16
  tile_color 0x9e3c6300
  xpos 1113
  ypos 465
 }
push $N1147c6a0
 Dot {
  name Dot7
  tile_color 0x9e3c6300
  xpos 666
  ypos 428
 }
set N114aeeb0 [stack 0]
 Dot {
  name Dot10
  tile_color 0x9e3c6300
  xpos 821
  ypos 428
 }
set N114b3730 [stack 0]
 Dot {
  name Dot13
  tile_color 0x9e3c6300
  xpos 949
  ypos 428
 }
set N114b7fb0 [stack 0]
 Dot {
  name Dot17
  tile_color 0x9e3c6300
  xpos 1100
  ypos 428
 }
push $N1146c380
 Dot {
  name Dot6
  tile_color 0x9e3c6300
  xpos 637
  ypos 392
 }
set N114c10b0 [stack 0]
 Dot {
  name Dot9
  tile_color 0x9e3c6300
  xpos 808
  ypos 392
 }
set N114c58e0 [stack 0]
 Dot {
  name Dot14
  tile_color 0x9e3c6300
  xpos 927
  ypos 392
 }
set N114ca2f0 [stack 0]
 Dot {
  name Dot18
  tile_color 0x9e3c6300
  xpos 1084
  ypos 392
 }
push $N1145bfe0
 Dot {
  name Dot5
  tile_color 0x9e3c6300
  xpos 592
  ypos 352
 }
set N114d3330 [stack 0]
 Dot {
  name Dot4
  tile_color 0x9e3c6300
  xpos 776
  ypos 352
 }
set N114d7bb0 [stack 0]
 Dot {
  name Dot15
  tile_color 0x9e3c6300
  xpos 905
  ypos 352
 }
set N114dc5c0 [stack 0]
 Dot {
  name Dot19
  tile_color 0x9e3c6300
  xpos 1068
  ypos 352
 }
 BlinkScript {
  inputs 4
  recompileCount 14
  ProgramGroup 1
  KernelDescription "2 \"InvertMatrix4\" iterate pixelWise 24c0b57d50e6fc4d3de1ddabffc2c534b1cd8bf00f432f09e06cab24b7b23d50 5 \"matrix0\" Read Point \"matrix1\" Read Point \"matrix2\" Read Point \"matrix3\" Read Point \"dst\" Write Point 0 0 0"
  kernelSource "kernel InvertMatrix4 : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix0; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix1; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix2; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix3; // the input image\n  Image<eWrite> dst; // the output image\n\n  void process() \{\n    // Read the input image\n    SampleType(matrix0) m0 = matrix0();\n    SampleType(matrix1) m1 = matrix1();\n    SampleType(matrix2) m2 = matrix2();\n    SampleType(matrix3) m3 = matrix3();\n\n    // Create the matrix object (matrix3 in this case)\n    float4x4  matrix;\n    matrix\[0]\[0] = m0.x;\n    matrix\[0]\[1] = m0.y;\n    matrix\[0]\[2] = m0.z;\n    matrix\[0]\[3] = m0.w;\n    matrix\[1]\[0] = m1.x;\n    matrix\[1]\[1] = m1.y;\n    matrix\[1]\[2] = m1.z;\n    matrix\[1]\[3] = m1.w;\n    matrix\[2]\[0] = m2.x;\n    matrix\[2]\[1] = m2.y;\n    matrix\[2]\[2] = m2.z;\n    matrix\[2]\[3] = m2.w;\n    matrix\[3]\[0] = m3.x;\n    matrix\[3]\[1] = m3.y;\n    matrix\[3]\[2] = m3.z;\n    matrix\[3]\[3] = m3.w;\n\n    // Inverse the matrix\n    matrix = matrix.invert();\n\n    // Write the result to the output image\n    dst() = float4(matrix\[3]\[0], matrix\[3]\[1], matrix\[3]\[2], matrix\[3]\[3]);\n  \}\n\};\n"
  rebuild ""
  rebuild_finalise ""
  name BlinkScript4
  xpos 1034
  ypos 579
 }
 Dot {
  name Dot2
  tile_color 0xcccccc00
  xpos 1068
  ypos 866
 }
push $N114a5e30
push $N114b7fb0
push $N114ca2f0
push $N114dc5c0
 BlinkScript {
  inputs 4
  recompileCount 14
  ProgramGroup 1
  KernelDescription "2 \"InvertMatrix4\" iterate pixelWise 18ad5fdc0440a3820ed7a9939c0cfbbf7fad1323aed420c38542f1e186aa8c86 5 \"matrix0\" Read Point \"matrix1\" Read Point \"matrix2\" Read Point \"matrix3\" Read Point \"dst\" Write Point 0 0 0"
  kernelSource "kernel InvertMatrix4 : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix0; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix1; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix2; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix3; // the input image\n  Image<eWrite> dst; // the output image\n\n  void process() \{\n    // Read the input image\n    SampleType(matrix0) m0 = matrix0();\n    SampleType(matrix1) m1 = matrix1();\n    SampleType(matrix2) m2 = matrix2();\n    SampleType(matrix3) m3 = matrix3();\n\n    // Create the matrix object (matrix3 in this case)\n    float4x4  matrix;\n    matrix\[0]\[0] = m0.x;\n    matrix\[0]\[1] = m0.y;\n    matrix\[0]\[2] = m0.z;\n    matrix\[0]\[3] = m0.w;\n    matrix\[1]\[0] = m1.x;\n    matrix\[1]\[1] = m1.y;\n    matrix\[1]\[2] = m1.z;\n    matrix\[1]\[3] = m1.w;\n    matrix\[2]\[0] = m2.x;\n    matrix\[2]\[1] = m2.y;\n    matrix\[2]\[2] = m2.z;\n    matrix\[2]\[3] = m2.w;\n    matrix\[3]\[0] = m3.x;\n    matrix\[3]\[1] = m3.y;\n    matrix\[3]\[2] = m3.z;\n    matrix\[3]\[3] = m3.w;\n\n    // Inverse the matrix\n    matrix = matrix.invert();\n\n    // Write the result to the output image\n    dst() = float4(matrix\[2]\[0], matrix\[2]\[1], matrix\[2]\[2], matrix\[2]\[3]);\n  \}\n\};\n"
  rebuild ""
  rebuild_finalise ""
  name BlinkScript3
  xpos 871
  ypos 585
 }
 Dot {
  name Dot1
  tile_color 0xcccccc00
  xpos 905
  ypos 776
 }
push $N114a1450
push $N114b3730
push $N114c58e0
push $N114d7bb0
 BlinkScript {
  inputs 4
  recompileCount 14
  ProgramGroup 1
  KernelDescription "2 \"InvertMatrix4\" iterate pixelWise e9f630cc235826bda0787271e2c79d1689a8462ddf208e8692d52b548c8b67e3 5 \"matrix0\" Read Point \"matrix1\" Read Point \"matrix2\" Read Point \"matrix3\" Read Point \"dst\" Write Point 0 0 0"
  kernelSource "kernel InvertMatrix4 : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix0; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix1; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix2; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix3; // the input image\n  Image<eWrite> dst; // the output image\n\n  void process() \{\n    // Read the input image\n    SampleType(matrix0) m0 = matrix0();\n    SampleType(matrix1) m1 = matrix1();\n    SampleType(matrix2) m2 = matrix2();\n    SampleType(matrix3) m3 = matrix3();\n\n    // Create the matrix object (matrix3 in this case)\n    float4x4  matrix;\n    matrix\[0]\[0] = m0.x;\n    matrix\[0]\[1] = m0.y;\n    matrix\[0]\[2] = m0.z;\n    matrix\[0]\[3] = m0.w;\n    matrix\[1]\[0] = m1.x;\n    matrix\[1]\[1] = m1.y;\n    matrix\[1]\[2] = m1.z;\n    matrix\[1]\[3] = m1.w;\n    matrix\[2]\[0] = m2.x;\n    matrix\[2]\[1] = m2.y;\n    matrix\[2]\[2] = m2.z;\n    matrix\[2]\[3] = m2.w;\n    matrix\[3]\[0] = m3.x;\n    matrix\[3]\[1] = m3.y;\n    matrix\[3]\[2] = m3.z;\n    matrix\[3]\[3] = m3.w;\n\n    // Inverse the matrix\n    matrix = matrix.invert();\n\n    // Write the result to the output image\n    dst() = float4(matrix\[1]\[0], matrix\[1]\[1], matrix\[1]\[2], matrix\[1]\[3]);\n  \}\n\};\n"
  rebuild ""
  rebuild_finalise ""
  name BlinkScript2
  xpos 742
  ypos 581
 }
 Dot {
  name Dot37
  tile_color 0xcccccc00
  xpos 776
  ypos 692
 }
push $N1149cd10
push $N114aeeb0
push $N114c10b0
push $N114d3330
 BlinkScript {
  inputs 4
  recompileCount 15
  ProgramGroup 1
  KernelDescription "2 \"InvertMatrix4\" iterate pixelWise 13aa95e9193320b60408dcef52f07d536b6bc8570746ebe3a513989e032825a7 5 \"matrix0\" Read Point \"matrix1\" Read Point \"matrix2\" Read Point \"matrix3\" Read Point \"dst\" Write Point 0 0 0"
  kernelSource "kernel InvertMatrix4 : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix0; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix1; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix2; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix3; // the input image\n  Image<eWrite> dst; // the output image\n\n  void process() \{\n    // Read the input image\n    SampleType(matrix0) m0 = matrix0();\n    SampleType(matrix1) m1 = matrix1();\n    SampleType(matrix2) m2 = matrix2();\n    SampleType(matrix3) m3 = matrix3();\n\n    // Create the matrix object (matrix3 in this case)\n    float4x4  matrix;\n    matrix\[0]\[0] = m0.x;\n    matrix\[0]\[1] = m0.y;\n    matrix\[0]\[2] = m0.z;\n    matrix\[0]\[3] = m0.w;\n    matrix\[1]\[0] = m1.x;\n    matrix\[1]\[1] = m1.y;\n    matrix\[1]\[2] = m1.z;\n    matrix\[1]\[3] = m1.w;\n    matrix\[2]\[0] = m2.x;\n    matrix\[2]\[1] = m2.y;\n    matrix\[2]\[2] = m2.z;\n    matrix\[2]\[3] = m2.w;\n    matrix\[3]\[0] = m3.x;\n    matrix\[3]\[1] = m3.y;\n    matrix\[3]\[2] = m3.z;\n    matrix\[3]\[3] = m3.w;\n\n    // Inverse the matrix\n    matrix = matrix.invert();\n\n    // Write the result to the output image\n    dst() = float4(matrix\[0]\[0], matrix\[0]\[1], matrix\[0]\[2], matrix\[0]\[3]);\n  \}\n\};\n"
  rebuild ""
  rebuild_finalise ""
  name BlinkScript1
  xpos 558
  ypos 588
 }
push $N11452e70
 Copy {
  inputs 2
  from0 rgba.red
  to0 matrix0.0
  from1 rgba.green
  to1 matrix0.1
  from2 rgba.blue
  to2 matrix0.2
  from3 rgba.alpha
  to3 matrix0.3
  bbox B
  name Copy2
  xpos 276
  ypos 569
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 matrix1.0
  from1 rgba.green
  to1 matrix1.1
  from2 rgba.blue
  to2 matrix1.2
  from3 rgba.alpha
  to3 matrix1.3
  bbox B
  name Copy1
  xpos 276
  ypos 664
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 matrix2.0
  from1 rgba.green
  to1 matrix2.1
  from2 rgba.blue
  to2 matrix2.2
  from3 rgba.alpha
  to3 matrix2.3
  bbox B
  name Copy4
  xpos 276
  ypos 748
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 matrix3.0
  from1 rgba.green
  to1 matrix3.1
  from2 rgba.blue
  to2 matrix3.2
  from3 rgba.alpha
  to3 matrix3.3
  bbox B
  name Copy5
  xpos 276
  ypos 838
 }
 Output {
  name Output1
  xpos 276
  ypos 1059
 }
end_group
Group {
 inputs 0
 name Vectors_Direction
 help "Convert the vector's directions to a value in Degrees."
 xpos -1349
 ypos 383
 addUserKnob {20 Dir l Direction}
 addUserKnob {41 in l Vector_Layer t "Pick the layer containing your motion vectors." T UV_Channel.in}
 addUserKnob {26 ""}
 addUserKnob {6 flip_angle t "Flips the directions of the rotations" +STARTLINE}
 addUserKnob {7 rotate R 0 360}
 addUserKnob {26 ""}
 addUserKnob {6 anisotropic t "The default anisotropic shader in Maya requires a value of 180 degrees in order to rotate the anisotropy by 90 degrees. Checking this box will multiply the values by 2." +STARTLINE}
 addUserKnob {6 normalize_range t "Display the values in a range of 0-1 instead of 0-360" -STARTLINE}
 normalize_range true
 addUserKnob {26 ""}
 addUserKnob {26 copyright l "" t www.erwanleroy.com +STARTLINE T "v1.0 - Part of VectorTools by Erwan Leroy - 2016"}
}
 Input {
  inputs 0
  name Input
  xpos -303
  ypos 91
 }
set N115efa40 [stack 0]
 Shuffle {
  name UV_Channel
  xpos -113
  ypos 91
 }
 Expression {
  channel0 rgb
  expr0 degrees(atan(r,g))+180
  name Vector_to_Degrees
  xpos -113
  ypos 145
 }
 Expression {
  channel0 rgb
  expr0 360-r
  name Counter_clockwise
  xpos -113
  ypos 187
  disable {{1-parent.flip_angle}}
 }
 Add {
  value {{parent.rotate}}
  name Rotate
  xpos -113
  ypos 224
 }
 Multiply {
  value 2
  name Multiply1
  xpos -113
  ypos 262
  disable {{1-parent.anisotropic}}
 }
 Expression {
  channel0 rgb
  expr0 r%360
  name Range360
  xpos -113
  ypos 317
 }
 Expression {
  channel0 rgb
  expr0 r/360
  name Range_0_1
  xpos -113
  ypos 365
  disable {{1-parent.normalize_range}}
 }
push $N115efa40
 ShuffleCopy {
  inputs 2
  in2 none
  red red
  green green
  blue blue
  alpha black
  out {{{parent.UV_Channel.in}}}
  name ShuffleCopy1
  xpos -303
  ypos 365
 }
 Output {
  name Output1
  xpos -303
  ypos 440
 }
end_group
StickyNote {
 inputs 0
 name StickyNote1
 label "make vector3 to angles"
 xpos -1359
 ypos 430
}
Group {
 inputs 0
 name RotateVector3_1
 help "Rotate a Vector3 in 3 dimensions."
 knobChanged "node = nuke.thisNode()\nknob = nuke.thisKnob()\nif knob.name() == \"mode\":\n    if knob.value() == \"Knob\":\n        node\['rotate'].setEnabled(True)\n        node\['rot_order'].setEnabled(True)\n    else:\n        node\['rotate'].setEnabled(False)\n        node\['rot_order'].setEnabled(False)\n"
 xpos -1956
 ypos 463
 addUserKnob {20 main_tab l TemplateMatrix4}
 addUserKnob {41 in l "Vector B Layer" t "Layer containing the vector information for input B" T vector_layer.in}
 addUserKnob {4 mode l "Rotate by" t "Either control the rotation by the knob present on this node, or via the Matrix input." M {Knob "Pixel Matrix" ""}}
 addUserKnob {26 ""}
 addUserKnob {4 rot_order l "rotation order" t "Specifies the order to apply euler angles to the rotation." M {XYZ XZY YXZ YZX ZXY ZYX "" "" ""}}
 rot_order ZXY
 addUserKnob {13 rotate}
 addUserKnob {26 ""}
 addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
}
 Input {
  inputs 0
  name vectorB
  xpos 0
  ypos -30
 }
 Dot {
  name Dot1
  tile_color 0xcccccc00
  xpos 34
  ypos 72
 }
set N110925b0 [stack 0]
 Shuffle {
  name vector_layer
  xpos 366
  ypos 68
 }
 Remove {
  operation keep
  channels rgba
  name Remove1
  xpos 366
  ypos 94
 }
 Dot {
  name Dot3
  tile_color 0x9e3c6300
  xpos 400
  ypos 156
 }
set N110af6a0 [stack 0]
 Dot {
  name Dot6
  tile_color 0x9e3c6300
  xpos 220
  ypos 156
 }
 Group {
  name Magnitude_Vector3_
  help "Calculate the magnitude (scalar) of an input Vector3."
  xpos 186
  ypos 231
  addUserKnob {20 main_tab l "Magnitude Vector3"}
  addUserKnob {41 in l "Vector B Layer" t "Layer containing the vector information for input B" T vector_layer.in}
  addUserKnob {26 ""}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name vectorB
   xpos 0
  }
  Dot {
   name Dot1
   tile_color 0xcccccc00
   xpos 34
   ypos 108
  }
set N110c5670 [stack 0]
  Shuffle {
   name vector_layer
   xpos 140
   ypos 104
  }
  Remove {
   operation keep
   channels rgba
   name Remove1
   xpos 140
   ypos 130
  }
  Expression {
   channel0 rgba
   expr0 sqrt((r*r)+(g*g)+(b*b))
   channel2 {-rgba.red -rgba.green -rgba.blue none}
   channel3 {none none none -rgba.alpha}
   name Mag3
   xpos 140
   ypos 227
  }
  Dot {
   name Dot2
   tile_color 0xcccccc00
   xpos 174
   ypos 364
  }
push $N110c5670
  ShuffleCopy {
   inputs 2
   in2 none
   red red
   green green
   blue blue
   out {{{parent.UV_Channel.in}}}
   name ShuffleCopy1
   xpos 0
   ypos 360
  }
  Output {
   name Output1
   xpos 0
   ypos 506
  }
 end_group
 Dot {
  name Dot7
  tile_color 0xcccccc00
  xpos 220
  ypos 529
 }
push $N110af6a0
 Dot {
  name Dot4
  tile_color 0x9e3c6300
  xpos 556
  ypos 156
 }
set N1110dd40 [stack 0]
 Input {
  inputs 0
  name matrix
  xpos 614
  ypos -30
  number 1
 }
 CopyBBox {
  inputs 2
  name CopyBBox1
  xpos 614
  ypos 152
 }
push $N1110dd40
 Dot {
  name Dot5
  tile_color 0x9e3c6300
  xpos 556
  ypos 198
 }
 Group {
  inputs 2
  name MultiplyVector3Matrix3_2
  help "Multiply (transform) a Vector3 by a Matrix3. This is the equivalent of applying Rotation/Scale/Skew from a Matrix to the vector.\nA Matrix4 can be used, but the last row/column will be ignored."
  xpos 614
  ypos 195
  addUserKnob {20 main_tab l "Mutiply Vector3 Matrix3"}
  addUserKnob {26 ""}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name InputMatrix3
   xpos 402
   ypos 7
   number 1
  }
  Dot {
   name Dot3
   tile_color 0xcccccc00
   xpos 436
   ypos 62
  }
  Shuffle {
   in matrix0
   name Shuffle1
   label "in \[value in]-->out \[value out]"
   xpos 402
   ypos 109
  }
set N11135390 [stack 0]
  Shuffle {
   in matrix1
   name Shuffle2
   label "in \[value in]-->out \[value out]"
   xpos 402
   ypos 147
  }
set N11145750 [stack 0]
  Shuffle {
   in matrix2
   name Shuffle3
   label "in \[value in]-->out \[value out]"
   xpos 402
   ypos 185
  }
set N11155a70 [stack 0]
  Shuffle {
   in matrix3
   name Shuffle4
   label "in \[value in]-->out \[value out]"
   xpos 402
   ypos 223
  }
push $N11155a70
  Dot {
   name Dot7
   tile_color 0x9e3c6300
   xpos 343
   ypos 195
  }
push $N11145750
  Dot {
   name Dot6
   tile_color 0x9e3c6300
   xpos 343
   ypos 157
  }
push $N11135390
  Dot {
   name Dot5
   tile_color 0x9e3c6300
   xpos 343
   ypos 119
  }
  Input {
   inputs 0
   name InputVector3
   xpos 219
   ypos 8
  }
  Dot {
   name Dot4
   tile_color 0xcccccc00
   xpos 253
   ypos 115
  }
  BlinkScript {
   inputs 4
   recompileCount 12
   ProgramGroup 1
   KernelDescription "2 \"TransformVector3byMatrix3\" iterate pixelWise 156e29276da8287b847626148a2a784d9969b7d1a3ad81e28187d00a7aaafaca 5 \"src\" Read Point \"matrix0\" Read Point \"matrix1\" Read Point \"matrix2\" Read Point \"dst\" Write Point 0 0 0"
   kernelSource "kernel TransformVector3byMatrix3 : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> src; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix0; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix1; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix2; // the input image\n  Image<eWrite> dst; // the output image\n\n  void process() \{\n    // Read the input image\n    SampleType(src) input = src();\n    SampleType(matrix0) m0 = matrix0();\n    SampleType(matrix1) m1 = matrix1();\n    SampleType(matrix2) m2 = matrix2();\n\n    // Create the matrix object (matrix3 in this case)\n    float3x3  matrix;\n    matrix\[0]\[0] = m0.x;\n    matrix\[0]\[1] = m0.y;\n    matrix\[0]\[2] = m0.z;\n    matrix\[1]\[0] = m1.x;\n    matrix\[1]\[1] = m1.y;\n    matrix\[1]\[2] = m1.z;\n    matrix\[2]\[0] = m2.x;\n    matrix\[2]\[1] = m2.y;\n    matrix\[2]\[2] = m2.z;\n\n    // Multiply the Matrix and the Vector\n    float3 vector(input.x, input.y, input.z);\n    vector = matrix*vector;\n\n    // Write the result to the output image\n    dst() = float4(vector.x, vector.y, vector.z, input.w);\n  \}\n\};\n"
   rebuild ""
   rebuild_finalise ""
   name BlinkScript1
   xpos 219
   ypos 223
  }
  Output {
   name Output1
   xpos 219
   ypos 323
  }
 end_group
 Dot {
  name Dot2
  tile_color 0xcccccc00
  xpos 648
  ypos 364
 }
push $N110af6a0
 ColorMatrix {
  matrix {
      {{Axis1.world_matrix.0} {Axis1.world_matrix.1} {Axis1.world_matrix.2}}
      {{Axis1.world_matrix.4} {Axis1.world_matrix.5} {Axis1.world_matrix.6}}
      {{Axis1.world_matrix.8} {Axis1.world_matrix.9} {Axis1.world_matrix.10}}
    }
  name ColorMatrix1
  xpos 366
  ypos 269
 }
 Switch {
  inputs 2
  which {{parent.mode}}
  name Switch1
  xpos 366
  ypos 360
 }
 Group {
  name NormalizeVector3_
  help "Normalize the magnitude of a Vector3 (to be of magnitude 1)"
  xpos 366
  ypos 450
  addUserKnob {20 main_tab l "Normalize Vector3"}
  addUserKnob {41 in l "Vector B Layer" t "Layer containing the vector information for input B" T vector_layer.in}
  addUserKnob {26 ""}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name vectorB
   xpos 0
  }
  Dot {
   name Dot1
   tile_color 0xcccccc00
   xpos 34
   ypos 108
  }
set N111c7c10 [stack 0]
  Shuffle {
   name vector_layer
   xpos 140
   ypos 104
  }
  Remove {
   operation keep
   channels rgba
   name Remove1
   xpos 140
   ypos 130
  }
  Dot {
   name Dot3
   tile_color 0x9e3c6300
   xpos 174
   ypos 156
  }
set N111e4ce0 [stack 0]
push $N111e4ce0
  Dot {
   name Dot4
   tile_color 0x9e3c6300
   xpos 377
   ypos 156
  }
  Expression {
   channel0 rgba
   expr0 sqrt((r*r)+(g*g)+(b*b))
   channel2 {-rgba.red -rgba.green -rgba.blue none}
   channel3 {none none none -rgba.alpha}
   name Mag3
   xpos 343
   ypos 209
  }
  Dot {
   name Dot5
   tile_color 0xcccccc00
   xpos 377
   ypos 271
  }
  Merge2 {
   inputs 2
   operation divide
   bbox B
   name Merge1
   xpos 140
   ypos 267
  }
  Dot {
   name Dot2
   tile_color 0x4b5ec600
   xpos 174
   ypos 364
  }
push $N111c7c10
  ShuffleCopy {
   inputs 2
   in2 none
   red red
   green green
   blue blue
   out {{{parent.UV_Channel.in}}}
   name ShuffleCopy1
   xpos 0
   ypos 360
  }
  Output {
   name Output1
   xpos 0
   ypos 506
  }
 end_group
 Merge2 {
  inputs 2
  operation multiply
  bbox B
  name Merge1
  xpos 366
  ypos 525
 }
 Dot {
  name Dot8
  tile_color 0x4b5ec600
  xpos 400
  ypos 601
 }
push $N110925b0
 ShuffleCopy {
  inputs 2
  in2 none
  red red
  green green
  blue blue
  out {{{parent.UV_Channel.in}}}
  name ShuffleCopy1
  xpos 0
  ypos 597
 }
 Output {
  name Output1
  xpos 0
  ypos 671
 }
 Axis2 {
  inputs 0
  rot_order {{parent.rot_order x1 2}}
  rotate {{parent.rotate.x} {parent.rotate.y} {parent.rotate.z}}
  name Axis1
  xpos 471
  ypos 252
 }
end_group
Group {
 inputs 0
 name TransformVector3_
 help "Transform a Vector3 in 3 dimensions."
 xpos -2217
 ypos 906
 addUserKnob {20 main_tab l "Normalize Vector3"}
 addUserKnob {4 matrix_source l "Use matrix from" t "The vectors can be transformed either by the an Axis connected to the Axis input, or a pixel matrix connected to the matrix input.\nOnly one can be used at once." M {Axis "Pixel Matrix"}}
 addUserKnob {6 is_vec4 l "Use alpha as vector W" t "4x4 Matrices can only transform vectors of dimention 4. The common method to transform a vecor3 with a matrix4 is to promote the vector3 to a vector4 by setting the w dimention to 1.\nBy checking this box, the vector w will be set to the alpha value instead. Only use if you know what you are trying to achieve." +STARTLINE}
 addUserKnob {6 normalize l "Normalize result" t "When enabled, the resulting vector is divided by the vector.w after the transformation.\nFor some type of transformations (for example 3d to 2d projection), this step may be required." -STARTLINE}
 normalize true
 addUserKnob {41 mix T Merge1.mix}
 addUserKnob {26 ""}
 addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
}
 Input {
  inputs 0
  name axis
  xpos 546
  ypos -298
  number 2
 }
 Axis2 {
  useMatrix true
  name MatrixKnob
  xpos 556
  ypos -206
 }
 Input {
  inputs 0
  name matrix
  xpos 358
  ypos -303
  number 1
 }
 Input {
  inputs 0
  name vector3
  xpos 0
  ypos -315
 }
 Dot {
  name Dot1
  tile_color 0xcccccc00
  xpos 34
  ypos -190
 }
set N130b4e60 [stack 0]
 Expression {
  channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
  expr0 MatrixKnob.world_matrix.0
  channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
  expr1 MatrixKnob.world_matrix.1
  channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
  expr2 MatrixKnob.world_matrix.2
  channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
  expr3 MatrixKnob.world_matrix.3
  name Expression1
  xpos 195
  ypos -193
 }
 Expression {
  channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
  expr0 MatrixKnob.world_matrix.4
  channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
  expr1 MatrixKnob.world_matrix.5
  channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
  expr2 MatrixKnob.world_matrix.6
  channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
  expr3 MatrixKnob.world_matrix.7
  name Expression2
  xpos 195
  ypos -169
 }
 Expression {
  channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
  expr0 MatrixKnob.world_matrix.8
  channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
  expr1 MatrixKnob.world_matrix.9
  channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
  expr2 MatrixKnob.world_matrix.10
  channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
  expr3 MatrixKnob.world_matrix.11
  name Expression3
  xpos 195
  ypos -145
 }
 Expression {
  channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
  expr0 MatrixKnob.world_matrix.12
  channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
  expr1 MatrixKnob.world_matrix.13
  channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
  expr2 MatrixKnob.world_matrix.14
  channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
  expr3 MatrixKnob.world_matrix.15
  name Expression4
  xpos 195
  ypos -121
 }
 Dot {
  name Dot2
  tile_color 0xcccccc00
  xpos 229
  ypos -36
 }
 Switch {
  inputs 2
  which {{parent.matrix_source}}
  name Switch1
  xpos 358
  ypos -39
 }
 Shuffle {
  in matrix0
  name Shuffle1
  label "in \[value in]-->out \[value out]"
  xpos 358
  ypos 107
 }
set N47a0bb0 [stack 0]
 Shuffle {
  in matrix1
  name Shuffle2
  label "in \[value in]-->out \[value out]"
  xpos 358
  ypos 147
 }
set N12bd7cd0 [stack 0]
 Shuffle {
  in matrix2
  name Shuffle3
  label "in \[value in]-->out \[value out]"
  xpos 358
  ypos 183
 }
set N13f2a260 [stack 0]
 Shuffle {
  in matrix3
  name Shuffle4
  label "in \[value in]-->out \[value out]"
  xpos 358
  ypos 220
 }
push $N13f2a260
push $N12bd7cd0
push $N47a0bb0
push $N130b4e60
 Dot {
  name Dot3
  tile_color 0xcccccc00
  xpos 30
  ypos 165
 }
set N123350b0 [stack 0]
 BlinkScript {
  inputs 5
  recompileCount 17
  ProgramGroup 1
  KernelDescription "2 \"TransformVector4\" iterate pixelWise c8231fef41d92500d0c2a17ef8af8144bb649972e112d5d8a48aa9a4351386d0 6 \"src\" Read Point \"matrix0\" Read Point \"matrix1\" Read Point \"matrix2\" Read Point \"matrix3\" Read Point \"dst\" Write Point 2 \"Input is Vector 4\" Bool 1 AA== \"Divide by W\" Bool 1 AQ== 2 \"is_vector4\" 1 1 \"do_normalization\" 1 1 0"
  kernelSource "kernel TransformVector4 : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> src; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix0; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix1; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix2; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix3; // the input image\n  Image<eWrite> dst; // the output image\n\n  param:\n    bool is_vector4; \n    bool do_normalization; \n\n  // In define(), parameters can be given labels and default values.\n  void define() \{\n    defineParam(is_vector4, \"Input is Vector 4\", false);\n    defineParam(do_normalization, \"Divide by W\", true);\n  \}\n\n  void process() \{\n    // Read the input image\n    SampleType(src) vector = src();\n    SampleType(matrix0) m0 = matrix0();\n    SampleType(matrix1) m1 = matrix1();\n    SampleType(matrix2) m2 = matrix2();\n    SampleType(matrix3) m3 = matrix3();\n\n    // Create the matrix object (matrix3 in this case)\n    float4x4  matrix;\n    matrix\[0]\[0] = m0.x;\n    matrix\[0]\[1] = m0.y;\n    matrix\[0]\[2] = m0.z;\n    matrix\[0]\[3] = m0.w;\n    matrix\[1]\[0] = m1.x;\n    matrix\[1]\[1] = m1.y;\n    matrix\[1]\[2] = m1.z;\n    matrix\[1]\[3] = m1.w;\n    matrix\[2]\[0] = m2.x;\n    matrix\[2]\[1] = m2.y;\n    matrix\[2]\[2] = m2.z;\n    matrix\[2]\[3] = m2.w;\n    matrix\[3]\[0] = m3.x;\n    matrix\[3]\[1] = m3.y;\n    matrix\[3]\[2] = m3.z;\n    matrix\[3]\[3] = m3.w;\n\n    // Transform\n    float a = vector.w;\n    if (!is_vector4) \{\n      vector.w = 1.0f;\n    \}\n    vector  = matrix*vector;\n    if (do_normalization) \{\n      vector  = vector/vector.w;\n    \}\n    if (!is_vector4) \{\n      vector.w = a;\n    \}\n\n    // Write the result to the output image\n    dst() = float4(vector.x, vector.y, vector.z, vector.w);\n  \}\n\};\n"
  rebuild ""
  "TransformVector4_Input is Vector 4" {{parent.is_vec4}}
  "TransformVector4_Divide by W" {{parent.normalize}}
  rebuild_finalise ""
  name BlinkScript1
  xpos 128
  ypos 156
 }
 Dot {
  name Dot4
  tile_color 0xcccccc00
  xpos 162
  ypos 296
 }
push $N123350b0
 Merge2 {
  inputs 2
  operation copy
  bbox B
  name Merge1
  xpos -4
  ypos 293
 }
 Output {
  name Output1
  xpos -4
  ypos 544
 }
end_group
Group {
 inputs 0
 name GenerateMatrix4_
 help "Generate a Matrix4 based on a Matrix Knob. (Defaults to an identity matrix)"
 knobChanged "node = nuke.thisNode()\nknob = nuke.thisKnob()\n\nif knob.name() == \"inputChange\":\n    with node:\n        format_knob = nuke.toNode('Constant1')\['format']\n    if node.input(0):\n        format_knob.setEnabled(False)\n    else:\n        format_knob.setEnabled(True)\n"
 xpos -2208
 ypos 505
 addUserKnob {20 Matrix4}
 addUserKnob {41 format T Constant1.format}
 addUserKnob {26 ""}
 addUserKnob {41 matrix T MatrixKnob.matrix}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {26 divider_copyright l "" +STARTLINE}
 addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x545454ff
  label "- Identity in\n  matrix layers\n- Bypass other channels"
  note_font_size 20
  xpos 411
  ypos 441
  bdwidth 280
  bdheight 262
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x545454ff
  label "Use input format"
  note_font_size 20
  xpos 408
  ypos -57
  bdwidth 281
  bdheight 195
 }
 BackdropNode {
  inputs 0
  name BackdropNode3
  tile_color 0x545454ff
  label "Custom format"
  note_font_size 20
  xpos 793
  ypos -58
  bdwidth 281
  bdheight 195
 }
 BackdropNode {
  inputs 0
  name BackdropNode4
  tile_color 0x464646ff
  label "Used for\nmatrix knob"
  note_font_size 20
  xpos 6
  ypos -57
  bdwidth 284
  bdheight 231
 }
 Axis2 {
  inputs 0
  useMatrix true
  name MatrixKnob
  xpos 111
  ypos 45
 }
 Constant {
  inputs 0
  channels rgb
  name Constant1
  xpos 889
  ypos 13
 }
 Dot {
  name Dot1
  xpos 923
  ypos 224
 }
 Input {
  inputs 0
  name Input
  xpos 509
  ypos 4
 }
 Switch {
  inputs 2
  which {{"!\[exists parent.input0]"}}
  name format
  xpos 509
  ypos 220
 }
 AddChannels {
  channels matrix0
  channels2 matrix1
  channels3 matrix2
  channels4 matrix3
  name AddChannels1
  xpos 509
  ypos 303
 }
 Expression {
  channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
  expr0 MatrixKnob.world_matrix.0
  channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
  expr1 MatrixKnob.world_matrix.1
  channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
  expr2 MatrixKnob.world_matrix.2
  channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
  expr3 MatrixKnob.world_matrix.3
  name Expression1
  xpos 509
  ypos 566
 }
 Expression {
  channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
  expr0 MatrixKnob.world_matrix.4
  channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
  expr1 MatrixKnob.world_matrix.5
  channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
  expr2 MatrixKnob.world_matrix.6
  channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
  expr3 MatrixKnob.world_matrix.7
  name Expression2
  xpos 509
  ypos 590
 }
 Expression {
  channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
  expr0 MatrixKnob.world_matrix.8
  channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
  expr1 MatrixKnob.world_matrix.9
  channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
  expr2 MatrixKnob.world_matrix.10
  channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
  expr3 MatrixKnob.world_matrix.11
  name Expression3
  xpos 509
  ypos 614
 }
 Expression {
  channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
  expr0 MatrixKnob.world_matrix.12
  channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
  expr1 MatrixKnob.world_matrix.13
  channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
  expr2 MatrixKnob.world_matrix.14
  channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
  expr3 MatrixKnob.world_matrix.15
  name Expression4
  xpos 509
  ypos 638
 }
 Output {
  name Output1
  xpos 509
  ypos 755
 }
end_group
Group {
 inputs 0
 name TransposeMatrix4_
 help "Transpose a pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
 knobChanged "node = nuke.thisNode()\nknob = nuke.thisKnob()\n\nif knob.name() == \"inputChange\":\n    with node:\n        format_knob = nuke.toNode('Constant1')\['format']\n    if node.input(0):\n        format_knob.setEnabled(False)\n    else:\n        format_knob.setEnabled(True)\n"
 xpos -2211
 ypos 597
 addUserKnob {20 Matrix4 l TransposeMatrix4}
 addUserKnob {26 Description l "" +STARTLINE T "Transpose matrix channels"}
 addUserKnob {26 divider_copyright l "" +STARTLINE}
 addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
}
 Input {
  inputs 0
  name Inputmatrix
  xpos 361
  ypos 272
 }
 Dot {
  name Dot31
  tile_color 0xcccccc00
  xpos 395
  ypos 355
 }
set N106d8fe0 [stack 0]
 Dot {
  name Dot32
  tile_color 0xcccccc00
  xpos 497
  ypos 355
 }
set N106dd860 [stack 0]
 Dot {
  name Dot33
  tile_color 0xcccccc00
  xpos 619
  ypos 355
 }
set N106e2150 [stack 0]
 Dot {
  name Dot34
  tile_color 0xcccccc00
  xpos 736
  ypos 355
 }
 Expression {
  channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
  expr0 matrix0.3
  channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
  expr1 matrix1.3
  channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
  expr2 matrix2.3
  channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
  name Expression56
  xpos 702
  ypos 402
 }
 Dot {
  name Dot2
  tile_color 0xcccccc00
  xpos 736
  ypos 638
 }
push $N106e2150
 Expression {
  channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
  expr0 matrix0.2
  channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
  expr1 matrix1.2
  channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
  channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
  expr3 matrix3.2
  name Expression55
  xpos 585
  ypos 399
 }
 Dot {
  name Dot1
  tile_color 0xcccccc00
  xpos 619
  ypos 548
 }
push $N106dd860
 Expression {
  channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
  expr0 matrix0.1
  channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
  channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
  expr2 matrix2.1
  channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
  expr3 matrix3.1
  name Expression54
  xpos 463
  ypos 398
 }
 Dot {
  name Dot37
  tile_color 0xcccccc00
  xpos 497
  ypos 464
 }
push $N106d8fe0
 Expression {
  channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
  channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
  expr1 matrix1.0
  channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
  expr2 matrix2.0
  channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
  expr3 matrix3.0
  name Expression53
  xpos 361
  ypos 395
 }
 Copy {
  inputs 2
  from0 matrix1.0
  to0 matrix1.0
  from1 matrix1.2
  to1 matrix1.2
  from2 matrix1.3
  to2 matrix1.3
  bbox B
  name Copy1
  xpos 361
  ypos 442
 }
 Copy {
  inputs 2
  from0 matrix2.0
  to0 matrix2.0
  from1 matrix2.1
  to1 matrix2.1
  from2 matrix2.3
  to2 matrix2.2
  bbox B
  name Copy2
  xpos 361
  ypos 526
 }
 Copy {
  inputs 2
  from0 matrix3.0
  to0 matrix3.0
  from1 matrix3.1
  to1 matrix3.1
  from2 matrix3.2
  to2 matrix3.2
  bbox B
  name Copy3
  xpos 361
  ypos 616
 }
 Output {
  name Output1
  xpos 361
  ypos 733
 }
end_group
Group {
 inputs 0
 name Vector3ToMatrix4_
 knobChanged "# Knobchanged code:\nnode = nuke.thisNode()\nknob = nuke.thisKnob()\nif knob.name() == 'vector_representation':\n    if knob.value() == 'Rotation (orientation vector)':\n        node\['lookat'].setVisible(True)\n        node\['minus_axis'].setVisible(True)\n    else:\n        node\['lookat'].setVisible(False)\n        node\['minus_axis'].setVisible(False)\n"
 xpos -2219
 ypos 746
 addUserKnob {20 main_tab l "Vector3 to Matrix4"}
 addUserKnob {4 vector_representation l "Use Vector as" t "A vector3 by itself cannot represent all the parts required for a matrix, however we are able to infer some transformation matrices from a vector3.\nFor a translation matrix, the x, y and z values are used as is for translate values.\nFor a rotation matrix, we calculate a rotation matrix so that a specified axis looks at the 3d point defined by the vector. If you are looking to rotate in x, y and z angles by the amount of each dimention of the vector, look at the RotateMatrix4 node instead.\nFor the scale vector, we use the magnitude here, so this will always result in an uniform scale. For non-uniform scaling, look at ScaleMatrix4." M {Translation "Rotation (orientation vector)" "Scale (magnitude)"}}
 addUserKnob {4 lookat l "Aim Axis" t "Aim the selected Axis in the direction of the 3d vector." +HIDDEN M {X Y Z "" ""}}
 addUserKnob {6 minus_axis l "Negative Axis" t "Use the negative axis rather than the positive axis" -STARTLINE +HIDDEN}
 addUserKnob {26 ""}
 addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x545454ff
  label "- Identity in\n  matrix layers\n- Bypass other channels"
  note_font_size 20
  xpos -39
  ypos 277
  bdwidth 280
  bdheight 262
 }
 Input {
  inputs 0
  name vector3
  xpos -335
  ypos -121
 }
 Dot {
  name Dot12
  tile_color 0xcccccc00
  xpos -301
  ypos 97
 }
set N20160d70 [stack 0]
 Group {
  name NormalizeVector3_1
  help "Normalize the magnitude of a Vector3 (to be of magnitude 1)"
  xpos -145
  ypos 94
  addUserKnob {20 main_tab l "Normalize Vector3"}
  addUserKnob {41 in l "Vector B Layer" t "Layer containing the vector information for input B" T vector_layer.in}
  addUserKnob {26 ""}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name vectorB
   xpos 0
  }
  Dot {
   name Dot1
   tile_color 0xcccccc00
   xpos 34
   ypos 108
  }
set N187fe670 [stack 0]
  Shuffle {
   name vector_layer
   xpos 140
   ypos 104
  }
  Remove {
   operation keep
   channels rgba
   name Remove1
   xpos 140
   ypos 130
  }
  Dot {
   name Dot3
   tile_color 0x9e3c6300
   xpos 174
   ypos 156
  }
set N2d755bb0 [stack 0]
push $N2d755bb0
  Dot {
   name Dot4
   tile_color 0x9e3c6300
   xpos 377
   ypos 156
  }
  Expression {
   channel0 rgba
   expr0 sqrt((r*r)+(g*g)+(b*b))
   channel2 {-rgba.red -rgba.green -rgba.blue none}
   channel3 {none none none -rgba.alpha}
   name Mag3
   xpos 343
   ypos 209
  }
  Dot {
   name Dot5
   tile_color 0xcccccc00
   xpos 377
   ypos 271
  }
  Merge2 {
   inputs 2
   operation divide
   bbox B
   name Merge1
   xpos 140
   ypos 267
  }
  Dot {
   name Dot2
   tile_color 0x4b5ec600
   xpos 174
   ypos 364
  }
push $N187fe670
  ShuffleCopy {
   inputs 2
   in2 none
   red red
   green green
   blue blue
   out {{{parent.UV_Channel.in}}}
   name ShuffleCopy1
   xpos 0
   ypos 360
  }
  Output {
   name Output1
   xpos 0
   ypos 506
  }
 end_group
 Multiply {
  value -1
  name Multiply1
  xpos 269
  ypos 88
  disable {{!parent.minus_axis}}
 }
 Dot {
  name Dot1
  tile_color 0x7aa9ff00
  xpos 303
  ypos 173
 }
set N1a71e340 [stack 0]
 Dot {
  name Dot5
  tile_color 0x7aa9ff00
  xpos 376
  ypos 173
 }
set N23750530 [stack 0]
 Constant {
  inputs 0
  channels rgb
  color {1 0 0 1}
  name Pole_Vector1
  xpos 609
  ypos -35
 }
 Constant {
  inputs 0
  channels rgb
  color {0 0 1 1}
  name Pole_Vector2
  xpos 506
  ypos -36
 }
 Constant {
  inputs 0
  channels rgb
  color {0 1 0 1}
  name Pole_Vector
  xpos 407
  ypos -38
 }
 Switch {
  inputs 3
  which {{parent.lookat}}
  name Pole_Picker
  xpos 407
  ypos 88
 }
 Group {
  inputs 2
  name CrossProductVector3_
  help "Calculates the cross product of 2 Vector3 inputs."
  xpos 407
  ypos 225
  addUserKnob {20 main_tab l "Cross Product Vector3"}
  addUserKnob {41 in l "Vector B Layer" t "Layer containing the vector information for input B" T vector_layer.in}
  addUserKnob {41 in_1 l "Vector A Layer" t "Layer containing the vector information for input A" T vector_layer1.in}
  addUserKnob {26 ""}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name vectorA
   xpos 457
   ypos -6
   number 1
  }
  Shuffle {
   name vector_layer1
   xpos 457
   ypos 103
  }
  Remove {
   operation keep
   channels rgba
   name Remove2
   xpos 457
   ypos 129
  }
  Dot {
   name Dot3
   tile_color 0x9e3c6300
   xpos 491
   ypos 210
  }
  Input {
   inputs 0
   name vectorB
   xpos 0
  }
  Dot {
   name Dot1
   tile_color 0xcccccc00
   xpos 34
   ypos 108
  }
set N1a6f7e20 [stack 0]
  Shuffle {
   name vector_layer
   xpos 140
   ypos 104
  }
  Remove {
   operation keep
   channels rgba
   name Remove1
   xpos 140
   ypos 130
  }
  MergeExpression {
   inputs 2
   expr0 "Ag*Bb - Ab*Bg"
   expr1 "Ab*Br - Ar*Bb"
   expr2 "Ar*Bg - Ag*Br"
   name MergeExpression2
   xpos 140
   ypos 206
  }
  Dot {
   name Dot2
   tile_color 0x4b5ec600
   xpos 174
   ypos 364
  }
push $N1a6f7e20
  ShuffleCopy {
   inputs 2
   in2 none
   red red
   green green
   blue blue
   out {{{parent.UV_Channel.in}}}
   name ShuffleCopy1
   xpos 0
   ypos 360
  }
  Output {
   name Output1
   xpos 0
   ypos 506
  }
 end_group
set N1d809700 [stack 0]
 Viewer {
  frame_range 1001-1296
  name Viewer1
  xpos 841
  ypos 259
 }
push $N20160d70
 Group {
  name Magnitude_Vector3_
  help "Calculate the magnitude (scalar) of an input Vector3."
  xpos -560
  ypos 94
  addUserKnob {20 main_tab l "Magnitude Vector3"}
  addUserKnob {41 in l "Vector B Layer" t "Layer containing the vector information for input B" T vector_layer.in}
  addUserKnob {26 ""}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name vectorB
   xpos 0
  }
  Dot {
   name Dot1
   tile_color 0xcccccc00
   xpos 34
   ypos 108
  }
set N16601ff0 [stack 0]
  Shuffle {
   name vector_layer
   xpos 140
   ypos 104
  }
  Remove {
   operation keep
   channels rgba
   name Remove1
   xpos 140
   ypos 130
  }
  Expression {
   channel0 rgba
   expr0 sqrt((r*r)+(g*g)+(b*b))
   channel2 {-rgba.red -rgba.green -rgba.blue none}
   channel3 {none none none -rgba.alpha}
   name Mag3
   xpos 140
   ypos 227
  }
  Dot {
   name Dot2
   tile_color 0xcccccc00
   xpos 174
   ypos 364
  }
push $N16601ff0
  ShuffleCopy {
   inputs 2
   in2 none
   red red
   green green
   blue blue
   out {{{parent.UV_Channel.in}}}
   name ShuffleCopy1
   xpos 0
   ypos 360
  }
  Output {
   name Output1
   xpos 0
   ypos 506
  }
 end_group
push $N1a71e340
 Dot {
  name Dot8
  tile_color 0x7aa9ff00
  xpos 93
  ypos 173
 }
 Remove {
  name Remove1
  xpos 59
  ypos 229
 }
 Expression {
  channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
  expr0 1
  channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
  expr1 0
  channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
  expr2 0
  channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
  expr3 0
  name Expression1
  xpos 59
  ypos 402
 }
 Expression {
  channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
  expr0 0
  channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
  expr1 1
  channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
  expr2 0
  channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
  expr3 0
  name Expression2
  xpos 59
  ypos 426
 }
 Expression {
  channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
  expr0 0
  channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
  expr1 0
  channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
  expr2 1
  channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
  expr3 0
  name Expression3
  xpos 59
  ypos 450
 }
 Expression {
  channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
  expr0 0
  channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
  expr1 0
  channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
  expr2 0
  channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
  expr3 1
  name Expression4
  xpos 59
  ypos 474
 }
 Dot {
  name Dot13
  tile_color 0xcccccc00
  xpos 93
  ypos 530
 }
set N23775770 [stack 0]
 Dot {
  name Dot14
  tile_color 0xcccccc00
  xpos -202
  ypos 530
 }
set N1b105ca0 [stack 0]
 Group {
  inputs 2
  name ScaleMatrix4_
  help "Scale a matrix4 using a control channel (rgb from vector input) for which each channel is considered as a scalar for x, y and z"
  xpos -560
  ypos 527
  addUserKnob {20 ScaleMatrix4}
  addUserKnob {26 Description l "" +STARTLINE T "Scale a matrix4 using a control channel (rgb) for which each channel is considered as a scalar for x, y and z"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name vector
   xpos 491
   ypos 162
   number 1
  }
  Dot {
   name Dot1
   xpos 525
   ypos 252
  }
  Input {
   inputs 0
   name matrix
   xpos 344
   ypos 161
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 matrix0.0*Ar
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 matrix1.1*Ag
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 matrix2.2*Ab
   channel3 none
   name MergeExpression1
   xpos 344
   ypos 249
  }
  Output {
   name Output1
   xpos 344
   ypos 349
  }
 end_group
 Dot {
  name Dot16
  tile_color 0xcccccc00
  xpos -526
  ypos 914
 }
push $N1a71e340
 Dot {
  name Dot3
  tile_color 0x7aa9ff00
  label "Aim Vector"
  xpos 303
  ypos 358
 }
set N20067680 [stack 0]
push $N1d809700
 Dot {
  name Dot2
  tile_color 0xcccccc00
  xpos 441
  ypos 262
 }
set N1a87f820 [stack 0]
push $N23750530
 Dot {
  name Dot6
  tile_color 0x7aa9ff00
  xpos 595
  ypos 173
 }
 Group {
  inputs 2
  name CrossProductVector3_1
  help "Calculates the cross product of 2 Vector3 inputs."
  xpos 561
  ypos 259
  addUserKnob {20 main_tab l "Cross Product Vector3"}
  addUserKnob {41 in l "Vector B Layer" t "Layer containing the vector information for input B" T vector_layer.in}
  addUserKnob {41 in_1 l "Vector A Layer" t "Layer containing the vector information for input A" T vector_layer1.in}
  addUserKnob {26 ""}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name vectorA
   xpos 457
   ypos -6
   number 1
  }
  Shuffle {
   name vector_layer1
   xpos 457
   ypos 103
  }
  Remove {
   operation keep
   channels rgba
   name Remove2
   xpos 457
   ypos 129
  }
  Dot {
   name Dot3
   tile_color 0x9e3c6300
   xpos 491
   ypos 210
  }
  Input {
   inputs 0
   name vectorB
   xpos 0
  }
  Dot {
   name Dot1
   tile_color 0xcccccc00
   xpos 34
   ypos 108
  }
set N355c18f0 [stack 0]
  Shuffle {
   name vector_layer
   xpos 140
   ypos 104
  }
  Remove {
   operation keep
   channels rgba
   name Remove1
   xpos 140
   ypos 130
  }
  MergeExpression {
   inputs 2
   expr0 "Ag*Bb - Ab*Bg"
   expr1 "Ab*Br - Ar*Bb"
   expr2 "Ar*Bg - Ag*Br"
   name MergeExpression2
   xpos 140
   ypos 206
  }
  Dot {
   name Dot2
   tile_color 0x4b5ec600
   xpos 174
   ypos 364
  }
push $N355c18f0
  ShuffleCopy {
   inputs 2
   in2 none
   red red
   green green
   blue blue
   out {{{parent.UV_Channel.in}}}
   name ShuffleCopy1
   xpos 0
   ypos 360
  }
  Output {
   name Output1
   xpos 0
   ypos 506
  }
 end_group
 Group {
  name NormalizeVector3_3
  help "Normalize the magnitude of a Vector3 (to be of magnitude 1)"
  xpos 561
  ypos 302
  addUserKnob {20 main_tab l "Normalize Vector3"}
  addUserKnob {41 in l "Vector B Layer" t "Layer containing the vector information for input B" T vector_layer.in}
  addUserKnob {26 ""}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name vectorB
   xpos 0
  }
  Dot {
   name Dot1
   tile_color 0xcccccc00
   xpos 34
   ypos 108
  }
set N2d652ae0 [stack 0]
  Shuffle {
   name vector_layer
   xpos 140
   ypos 104
  }
  Remove {
   operation keep
   channels rgba
   name Remove1
   xpos 140
   ypos 130
  }
  Dot {
   name Dot3
   tile_color 0x9e3c6300
   xpos 174
   ypos 156
  }
set N13c512c0 [stack 0]
push $N13c512c0
  Dot {
   name Dot4
   tile_color 0x9e3c6300
   xpos 377
   ypos 156
  }
  Expression {
   channel0 rgba
   expr0 sqrt((r*r)+(g*g)+(b*b))
   channel2 {-rgba.red -rgba.green -rgba.blue none}
   channel3 {none none none -rgba.alpha}
   name Mag3
   xpos 343
   ypos 209
  }
  Dot {
   name Dot5
   tile_color 0xcccccc00
   xpos 377
   ypos 271
  }
  Merge2 {
   inputs 2
   operation divide
   bbox B
   name Merge1
   xpos 140
   ypos 267
  }
  Dot {
   name Dot2
   tile_color 0x4b5ec600
   xpos 174
   ypos 364
  }
push $N2d652ae0
  ShuffleCopy {
   inputs 2
   in2 none
   red red
   green green
   blue blue
   out {{{parent.UV_Channel.in}}}
   name ShuffleCopy1
   xpos 0
   ypos 360
  }
  Output {
   name Output1
   xpos 0
   ypos 506
  }
 end_group
 Dot {
  name Dot7
  tile_color 0xcccccc00
  label "Modified Pole Vector"
  xpos 595
  ypos 355
 }
set N2cf94c10 [stack 0]
push $N1a87f820
 Group {
  name NormalizeVector3_2
  help "Normalize the magnitude of a Vector3 (to be of magnitude 1)"
  xpos 408
  ypos 302
  addUserKnob {20 main_tab l "Normalize Vector3"}
  addUserKnob {41 in l "Vector B Layer" t "Layer containing the vector information for input B" T vector_layer.in}
  addUserKnob {26 ""}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name vectorB
   xpos 0
  }
  Dot {
   name Dot1
   tile_color 0xcccccc00
   xpos 34
   ypos 108
  }
set N2cee8b50 [stack 0]
  Shuffle {
   name vector_layer
   xpos 140
   ypos 104
  }
  Remove {
   operation keep
   channels rgba
   name Remove1
   xpos 140
   ypos 130
  }
  Dot {
   name Dot3
   tile_color 0x9e3c6300
   xpos 174
   ypos 156
  }
set N238518a0 [stack 0]
push $N238518a0
  Dot {
   name Dot4
   tile_color 0x9e3c6300
   xpos 377
   ypos 156
  }
  Expression {
   channel0 rgba
   expr0 sqrt((r*r)+(g*g)+(b*b))
   channel2 {-rgba.red -rgba.green -rgba.blue none}
   channel3 {none none none -rgba.alpha}
   name Mag3
   xpos 343
   ypos 209
  }
  Dot {
   name Dot5
   tile_color 0xcccccc00
   xpos 377
   ypos 271
  }
  Merge2 {
   inputs 2
   operation divide
   bbox B
   name Merge1
   xpos 140
   ypos 267
  }
  Dot {
   name Dot2
   tile_color 0x4b5ec600
   xpos 174
   ypos 364
  }
push $N2cee8b50
  ShuffleCopy {
   inputs 2
   in2 none
   red red
   green green
   blue blue
   out {{{parent.UV_Channel.in}}}
   name ShuffleCopy1
   xpos 0
   ypos 360
  }
  Output {
   name Output1
   xpos 0
   ypos 506
  }
 end_group
 Dot {
  name Dot4
  tile_color 0xcccccc00
  label "Unconstrained Vector"
  xpos 441
  ypos 354
 }
set N2d691920 [stack 0]
 Switch {
  inputs 3
  which {{parent.lookat}}
  name Z
  xpos 561
  ypos 438
 }
 Dot {
  name Dot9
  tile_color 0xcccccc00
  xpos 595
  ypos 728
 }
push $N2d691920
push $N20067680
push $N2cf94c10
 Switch {
  inputs 3
  which {{parent.lookat}}
  name Y
  xpos 407
  ypos 433
 }
 Dot {
  name Dot10
  tile_color 0xcccccc00
  xpos 441
  ypos 666
 }
push $N2cf94c10
push $N2d691920
push $N20067680
 Switch {
  inputs 3
  which {{parent.lookat}}
  name X
  xpos 269
  ypos 432
 }
 Dot {
  name Dot11
  tile_color 0xcccccc00
  xpos 303
  ypos 604
 }
push $N23775770
 Copy {
  inputs 2
  from0 rgba.red
  to0 matrix0.0
  from1 rgba.green
  to1 matrix1.0
  from2 rgba.blue
  to2 matrix2.0
  bbox B
  name Copy1
  xpos 59
  ypos 582
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 matrix0.1
  from1 rgba.green
  to1 matrix1.1
  from2 rgba.blue
  to2 matrix2.1
  bbox B
  name Copy2
  xpos 59
  ypos 644
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 matrix0.2
  from1 rgba.green
  to1 matrix1.2
  from2 rgba.blue
  to2 matrix2.2
  bbox B
  name Copy3
  xpos 59
  ypos 706
 }
 Dot {
  name Dot17
  tile_color 0x9e3c6300
  xpos 93
  ypos 914
 }
push $N20160d70
 Dot {
  name Dot15
  tile_color 0xcccccc00
  xpos -301
  ypos 606
 }
push $N1b105ca0
 Copy {
  inputs 2
  from0 rgba.red
  to0 matrix0.3
  from1 rgba.green
  to1 matrix1.3
  from2 rgba.blue
  to2 matrix2.3
  bbox B
  name Copy4
  xpos -236
  ypos 584
 }
 Switch {
  inputs 3
  which {{parent.vector_representation}}
  name Switch1
  xpos -236
  ypos 911
 }
 Output {
  name Output1
  xpos -236
  ypos 1009
 }
end_group
Card2 {
 inputs 0
 rotate {{parent.picker.r} {parent.picker.r} {parent.picker.r}}
 control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
 name Card1
 xpos -17
 ypos 801
}
push 0
Scene {
 inputs 2
 name Scene1
 xpos -142
 ypos 763
}
Viewer {
 frame_range 1001-1101
 fps 25
 viewerProcess "rec709 (default)"
 name Viewer2
 xpos -152
 ypos 893
}
Cylinder {
 inputs 0
 name Cylinder1
 xpos -92
 ypos 693
}
Cube {
 inputs 0
 rotate {19 36 0}
 name Cube2
 xpos -321
 ypos 710
}
Group {
 inputs 0
 name NormalizeVector3_
 help "Normalize the magnitude of a Vector3 (to be of magnitude 1)"
 xpos -2218
 ypos 44
 addUserKnob {20 main_tab l "Normalize Vector3"}
 addUserKnob {41 in l "Vector B Layer" t "Layer containing the vector information for input B" T vector_layer.in}
 addUserKnob {26 ""}
 addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
}
 Input {
  inputs 0
  name vectorB
  xpos 0
 }
 Dot {
  name Dot1
  tile_color 0xcccccc00
  xpos 34
  ypos 108
 }
set Nb5cebc0 [stack 0]
 Shuffle {
  name vector_layer
  xpos 140
  ypos 104
 }
 Remove {
  operation keep
  channels rgba
  name Remove1
  xpos 140
  ypos 130
 }
 Dot {
  name Dot3
  tile_color 0x9e3c6300
  xpos 174
  ypos 156
 }
set Nb68dc90 [stack 0]
push $Nb68dc90
 Dot {
  name Dot4
  tile_color 0x9e3c6300
  xpos 377
  ypos 156
 }
 Expression {
  channel0 rgba
  expr0 sqrt((r*r)+(g*g)+(b*b))
  channel2 {-rgba.red -rgba.green -rgba.blue none}
  channel3 {none none none -rgba.alpha}
  name Mag3
  xpos 343
  ypos 209
 }
 Dot {
  name Dot5
  tile_color 0xcccccc00
  xpos 377
  ypos 271
 }
 Merge2 {
  inputs 2
  operation divide
  bbox B
  name Merge1
  xpos 140
  ypos 267
 }
 Dot {
  name Dot2
  tile_color 0x4b5ec600
  xpos 174
  ypos 364
 }
push $Nb5cebc0
 ShuffleCopy {
  inputs 2
  in2 none
  red red
  green green
  blue blue
  out {{{parent.UV_Channel.in}}}
  name ShuffleCopy1
  xpos 0
  ypos 360
 }
 Output {
  name Output1
  xpos 0
  ypos 506
 }
end_group
Constant {
 inputs 0
 channels rgb
 color {{Axis3.translate} {Axis3.translate} {Axis3.translate} {Axis3.translate}}
 name Constant1
 xpos -1097
 ypos 539
}
set N12575730 [stack 0]
Group {
 name Vector3ToMatrix4_1
 knobChanged "# Knobchanged code:\nnode = nuke.thisNode()\nknob = nuke.thisKnob()\nif knob.name() == 'vector_representation':\n    if knob.value() == 'Rotation (orientation vector)':\n        node\['lookat'].setVisible(True)\n        node\['minus_axis'].setVisible(True)\n    else:\n        node\['lookat'].setVisible(False)\n        node\['minus_axis'].setVisible(False)\n"
 xpos -1097
 ypos 658
 addUserKnob {20 main_tab l "Vector3 to Matrix4"}
 addUserKnob {4 vector_representation l "Use Vector as" t "A vector3 by itself cannot represent all the parts required for a matrix, however we are able to infer some transformation matrices from a vector3.\nFor a translation matrix, the x, y and z values are used as is for translate values.\nFor a rotation matrix, we calculate a rotation matrix so that a specified axis looks at the 3d point defined by the vector. If you are looking to rotate in x, y and z angles by the amount of each dimention of the vector, look at the RotateMatrix4 node instead.\nFor the scale vector, we use the magnitude here, so this will always result in an uniform scale. For non-uniform scaling, look at ScaleMatrix4." M {Translation "Rotation (orientation vector)" "Scale (magnitude)"}}
 vector_representation "Rotation (orientation vector)"
 addUserKnob {4 lookat l "Aim Axis" t "Aim the selected Axis in the direction of the 3d vector." M {X Y Z "" ""}}
 addUserKnob {6 minus_axis l "Negative Axis" t "Use the negative axis rather than the positive axis" -STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x545454ff
  label "- Identity in\n  matrix layers\n- Bypass other channels"
  note_font_size 20
  xpos -39
  ypos 277
  bdwidth 280
  bdheight 262
 }
 Input {
  inputs 0
  name Input1
  xpos -335
  ypos -120
 }
 Dot {
  name Dot12
  tile_color 0xcccccc00
  xpos -301
  ypos 97
 }
set N22160290 [stack 0]
 Group {
  name NormalizeVector3_1
  help "Normalize the magnitude of a Vector3 (to be of magnitude 1)"
  xpos -145
  ypos 94
  addUserKnob {20 main_tab l "Normalize Vector3"}
  addUserKnob {41 in l "Vector B Layer" t "Layer containing the vector information for input B" T vector_layer.in}
  addUserKnob {26 ""}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name vectorB
   xpos 0
  }
  Dot {
   name Dot1
   tile_color 0xcccccc00
   xpos 34
   ypos 108
  }
set N355cee70 [stack 0]
  Shuffle {
   name vector_layer
   xpos 140
   ypos 104
  }
  Remove {
   operation keep
   channels rgba
   name Remove1
   xpos 140
   ypos 130
  }
  Dot {
   name Dot3
   tile_color 0x9e3c6300
   xpos 174
   ypos 156
  }
set N1df20eb0 [stack 0]
push $N1df20eb0
  Dot {
   name Dot4
   tile_color 0x9e3c6300
   xpos 377
   ypos 156
  }
  Expression {
   channel0 rgba
   expr0 sqrt((r*r)+(g*g)+(b*b))
   channel2 {-rgba.red -rgba.green -rgba.blue none}
   channel3 {none none none -rgba.alpha}
   name Mag3
   xpos 343
   ypos 209
  }
  Dot {
   name Dot5
   tile_color 0xcccccc00
   xpos 377
   ypos 271
  }
  Merge2 {
   inputs 2
   operation divide
   bbox B
   name Merge1
   xpos 140
   ypos 267
  }
  Dot {
   name Dot2
   tile_color 0x4b5ec600
   xpos 174
   ypos 364
  }
push $N355cee70
  ShuffleCopy {
   inputs 2
   in2 none
   red red
   green green
   blue blue
   out {{{parent.UV_Channel.in}}}
   name ShuffleCopy1
   xpos 0
   ypos 360
  }
  Output {
   name Output1
   xpos 0
   ypos 506
  }
 end_group
 Multiply {
  value -1
  name Multiply1
  xpos 269
  ypos 88
  disable {{!parent.minus_axis}}
 }
 Dot {
  name Dot1
  tile_color 0x7aa9ff00
  xpos 303
  ypos 173
 }
set N2d1e0f70 [stack 0]
 Dot {
  name Dot5
  tile_color 0x7aa9ff00
  xpos 376
  ypos 173
 }
set Nac8bf10 [stack 0]
 Constant {
  inputs 0
  channels rgb
  color {1 0 0 1}
  name Pole_Vector1
  xpos 609
  ypos -35
 }
 Constant {
  inputs 0
  channels rgb
  color {0 0 1 1}
  name Pole_Vector2
  xpos 506
  ypos -36
 }
 Constant {
  inputs 0
  channels rgb
  color {0 1 0 1}
  name Pole_Vector
  xpos 407
  ypos -38
 }
 Switch {
  inputs 3
  which {{parent.lookat}}
  name Pole_Picker
  xpos 407
  ypos 88
 }
 Group {
  inputs 2
  name CrossProductVector3_
  help "Calculates the cross product of 2 Vector3 inputs."
  xpos 407
  ypos 225
  addUserKnob {20 main_tab l "Cross Product Vector3"}
  addUserKnob {41 in l "Vector B Layer" t "Layer containing the vector information for input B" T vector_layer.in}
  addUserKnob {41 in_1 l "Vector A Layer" t "Layer containing the vector information for input A" T vector_layer1.in}
  addUserKnob {26 ""}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name vectorA
   xpos 457
   ypos -6
   number 1
  }
  Shuffle {
   name vector_layer1
   xpos 457
   ypos 103
  }
  Remove {
   operation keep
   channels rgba
   name Remove2
   xpos 457
   ypos 129
  }
  Dot {
   name Dot3
   tile_color 0x9e3c6300
   xpos 491
   ypos 210
  }
  Input {
   inputs 0
   name vectorB
   xpos 0
  }
  Dot {
   name Dot1
   tile_color 0xcccccc00
   xpos 34
   ypos 108
  }
set N2c5203b0 [stack 0]
  Shuffle {
   name vector_layer
   xpos 140
   ypos 104
  }
  Remove {
   operation keep
   channels rgba
   name Remove1
   xpos 140
   ypos 130
  }
  MergeExpression {
   inputs 2
   expr0 "Ag*Bb - Ab*Bg"
   expr1 "Ab*Br - Ar*Bb"
   expr2 "Ar*Bg - Ag*Br"
   name MergeExpression2
   xpos 140
   ypos 206
  }
  Dot {
   name Dot2
   tile_color 0x4b5ec600
   xpos 174
   ypos 364
  }
push $N2c5203b0
  ShuffleCopy {
   inputs 2
   in2 none
   red red
   green green
   blue blue
   out {{{parent.UV_Channel.in}}}
   name ShuffleCopy1
   xpos 0
   ypos 360
  }
  Output {
   name Output1
   xpos 0
   ypos 506
  }
 end_group
set N2b607d70 [stack 0]
 Viewer {
  frame_range 1001-1296
  name Viewer1
  xpos 841
  ypos 259
 }
push $N22160290
 Group {
  name Magnitude_Vector3_
  help "Calculate the magnitude (scalar) of an input Vector3."
  xpos -560
  ypos 94
  addUserKnob {20 main_tab l "Magnitude Vector3"}
  addUserKnob {41 in l "Vector B Layer" t "Layer containing the vector information for input B" T vector_layer.in}
  addUserKnob {26 ""}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name vectorB
   xpos 0
  }
  Dot {
   name Dot1
   tile_color 0xcccccc00
   xpos 34
   ypos 108
  }
set N2d6899f0 [stack 0]
  Shuffle {
   name vector_layer
   xpos 140
   ypos 104
  }
  Remove {
   operation keep
   channels rgba
   name Remove1
   xpos 140
   ypos 130
  }
  Expression {
   channel0 rgba
   expr0 sqrt((r*r)+(g*g)+(b*b))
   channel2 {-rgba.red -rgba.green -rgba.blue none}
   channel3 {none none none -rgba.alpha}
   name Mag3
   xpos 140
   ypos 227
  }
  Dot {
   name Dot2
   tile_color 0xcccccc00
   xpos 174
   ypos 364
  }
push $N2d6899f0
  ShuffleCopy {
   inputs 2
   in2 none
   red red
   green green
   blue blue
   out {{{parent.UV_Channel.in}}}
   name ShuffleCopy1
   xpos 0
   ypos 360
  }
  Output {
   name Output1
   xpos 0
   ypos 506
  }
 end_group
push $N2d1e0f70
 Dot {
  name Dot8
  tile_color 0x7aa9ff00
  xpos 93
  ypos 173
 }
 Remove {
  name Remove1
  xpos 59
  ypos 229
 }
 Expression {
  channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
  expr0 1
  channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
  expr1 0
  channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
  expr2 0
  channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
  expr3 0
  name Expression1
  xpos 59
  ypos 402
 }
 Expression {
  channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
  expr0 0
  channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
  expr1 1
  channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
  expr2 0
  channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
  expr3 0
  name Expression2
  xpos 59
  ypos 426
 }
 Expression {
  channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
  expr0 0
  channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
  expr1 0
  channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
  expr2 1
  channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
  expr3 0
  name Expression3
  xpos 59
  ypos 450
 }
 Expression {
  channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
  expr0 0
  channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
  expr1 0
  channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
  expr2 0
  channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
  expr3 1
  name Expression4
  xpos 59
  ypos 474
 }
 Dot {
  name Dot13
  tile_color 0xcccccc00
  xpos 93
  ypos 530
 }
set N1f244440 [stack 0]
 Dot {
  name Dot14
  tile_color 0xcccccc00
  xpos -202
  ypos 530
 }
set N35ac29e0 [stack 0]
 Group {
  inputs 2
  name ScaleMatrix4_
  help "Scale a matrix4 using a control channel (rgb from vector input) for which each channel is considered as a scalar for x, y and z"
  xpos -560
  ypos 527
  addUserKnob {20 ScaleMatrix4}
  addUserKnob {26 Description l "" +STARTLINE T "Scale a matrix4 using a control channel (rgb) for which each channel is considered as a scalar for x, y and z"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name vector
   xpos 491
   ypos 162
   number 1
  }
  Dot {
   name Dot1
   xpos 525
   ypos 252
  }
  Input {
   inputs 0
   name matrix
   xpos 344
   ypos 161
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 matrix0.0*Ar
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 matrix1.1*Ag
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 matrix2.2*Ab
   channel3 none
   name MergeExpression1
   xpos 344
   ypos 249
  }
  Output {
   name Output1
   xpos 344
   ypos 349
  }
 end_group
 Dot {
  name Dot16
  tile_color 0xcccccc00
  xpos -526
  ypos 914
 }
push $N2d1e0f70
 Dot {
  name Dot3
  tile_color 0x7aa9ff00
  label "Aim Vector"
  xpos 303
  ypos 358
 }
set N3948eb50 [stack 0]
push $N2b607d70
 Dot {
  name Dot2
  tile_color 0xcccccc00
  xpos 441
  ypos 262
 }
set N15584cf0 [stack 0]
push $Nac8bf10
 Dot {
  name Dot6
  tile_color 0x7aa9ff00
  xpos 595
  ypos 173
 }
 Group {
  inputs 2
  name CrossProductVector3_1
  help "Calculates the cross product of 2 Vector3 inputs."
  xpos 561
  ypos 259
  addUserKnob {20 main_tab l "Cross Product Vector3"}
  addUserKnob {41 in l "Vector B Layer" t "Layer containing the vector information for input B" T vector_layer.in}
  addUserKnob {41 in_1 l "Vector A Layer" t "Layer containing the vector information for input A" T vector_layer1.in}
  addUserKnob {26 ""}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name vectorA
   xpos 457
   ypos -6
   number 1
  }
  Shuffle {
   name vector_layer1
   xpos 457
   ypos 103
  }
  Remove {
   operation keep
   channels rgba
   name Remove2
   xpos 457
   ypos 129
  }
  Dot {
   name Dot3
   tile_color 0x9e3c6300
   xpos 491
   ypos 210
  }
  Input {
   inputs 0
   name vectorB
   xpos 0
  }
  Dot {
   name Dot1
   tile_color 0xcccccc00
   xpos 34
   ypos 108
  }
set N2cbdc690 [stack 0]
  Shuffle {
   name vector_layer
   xpos 140
   ypos 104
  }
  Remove {
   operation keep
   channels rgba
   name Remove1
   xpos 140
   ypos 130
  }
  MergeExpression {
   inputs 2
   expr0 "Ag*Bb - Ab*Bg"
   expr1 "Ab*Br - Ar*Bb"
   expr2 "Ar*Bg - Ag*Br"
   name MergeExpression2
   xpos 140
   ypos 206
  }
  Dot {
   name Dot2
   tile_color 0x4b5ec600
   xpos 174
   ypos 364
  }
push $N2cbdc690
  ShuffleCopy {
   inputs 2
   in2 none
   red red
   green green
   blue blue
   out {{{parent.UV_Channel.in}}}
   name ShuffleCopy1
   xpos 0
   ypos 360
  }
  Output {
   name Output1
   xpos 0
   ypos 506
  }
 end_group
 Group {
  name NormalizeVector3_3
  help "Normalize the magnitude of a Vector3 (to be of magnitude 1)"
  xpos 561
  ypos 302
  addUserKnob {20 main_tab l "Normalize Vector3"}
  addUserKnob {41 in l "Vector B Layer" t "Layer containing the vector information for input B" T vector_layer.in}
  addUserKnob {26 ""}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name vectorB
   xpos 0
  }
  Dot {
   name Dot1
   tile_color 0xcccccc00
   xpos 34
   ypos 108
  }
set N15ca6830 [stack 0]
  Shuffle {
   name vector_layer
   xpos 140
   ypos 104
  }
  Remove {
   operation keep
   channels rgba
   name Remove1
   xpos 140
   ypos 130
  }
  Dot {
   name Dot3
   tile_color 0x9e3c6300
   xpos 174
   ypos 156
  }
set N1caa5100 [stack 0]
push $N1caa5100
  Dot {
   name Dot4
   tile_color 0x9e3c6300
   xpos 377
   ypos 156
  }
  Expression {
   channel0 rgba
   expr0 sqrt((r*r)+(g*g)+(b*b))
   channel2 {-rgba.red -rgba.green -rgba.blue none}
   channel3 {none none none -rgba.alpha}
   name Mag3
   xpos 343
   ypos 209
  }
  Dot {
   name Dot5
   tile_color 0xcccccc00
   xpos 377
   ypos 271
  }
  Merge2 {
   inputs 2
   operation divide
   bbox B
   name Merge1
   xpos 140
   ypos 267
  }
  Dot {
   name Dot2
   tile_color 0x4b5ec600
   xpos 174
   ypos 364
  }
push $N15ca6830
  ShuffleCopy {
   inputs 2
   in2 none
   red red
   green green
   blue blue
   out {{{parent.UV_Channel.in}}}
   name ShuffleCopy1
   xpos 0
   ypos 360
  }
  Output {
   name Output1
   xpos 0
   ypos 506
  }
 end_group
 Dot {
  name Dot7
  tile_color 0xcccccc00
  label "Modified Pole Vector"
  xpos 595
  ypos 355
 }
set N2c616d00 [stack 0]
push $N15584cf0
 Group {
  name NormalizeVector3_2
  help "Normalize the magnitude of a Vector3 (to be of magnitude 1)"
  xpos 408
  ypos 302
  addUserKnob {20 main_tab l "Normalize Vector3"}
  addUserKnob {41 in l "Vector B Layer" t "Layer containing the vector information for input B" T vector_layer.in}
  addUserKnob {26 ""}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name vectorB
   xpos 0
  }
  Dot {
   name Dot1
   tile_color 0xcccccc00
   xpos 34
   ypos 108
  }
set N29048c10 [stack 0]
  Shuffle {
   name vector_layer
   xpos 140
   ypos 104
  }
  Remove {
   operation keep
   channels rgba
   name Remove1
   xpos 140
   ypos 130
  }
  Dot {
   name Dot3
   tile_color 0x9e3c6300
   xpos 174
   ypos 156
  }
set N2d53d110 [stack 0]
push $N2d53d110
  Dot {
   name Dot4
   tile_color 0x9e3c6300
   xpos 377
   ypos 156
  }
  Expression {
   channel0 rgba
   expr0 sqrt((r*r)+(g*g)+(b*b))
   channel2 {-rgba.red -rgba.green -rgba.blue none}
   channel3 {none none none -rgba.alpha}
   name Mag3
   xpos 343
   ypos 209
  }
  Dot {
   name Dot5
   tile_color 0xcccccc00
   xpos 377
   ypos 271
  }
  Merge2 {
   inputs 2
   operation divide
   bbox B
   name Merge1
   xpos 140
   ypos 267
  }
  Dot {
   name Dot2
   tile_color 0x4b5ec600
   xpos 174
   ypos 364
  }
push $N29048c10
  ShuffleCopy {
   inputs 2
   in2 none
   red red
   green green
   blue blue
   out {{{parent.UV_Channel.in}}}
   name ShuffleCopy1
   xpos 0
   ypos 360
  }
  Output {
   name Output1
   xpos 0
   ypos 506
  }
 end_group
 Dot {
  name Dot4
  tile_color 0xcccccc00
  label "Unconstrained Vector"
  xpos 441
  ypos 354
 }
set N1df26280 [stack 0]
 Switch {
  inputs 3
  which {{parent.lookat}}
  name Z
  xpos 561
  ypos 438
 }
 Dot {
  name Dot9
  tile_color 0xcccccc00
  xpos 595
  ypos 728
 }
push $N1df26280
push $N3948eb50
push $N2c616d00
 Switch {
  inputs 3
  which {{parent.lookat}}
  name Y
  xpos 407
  ypos 433
 }
 Dot {
  name Dot10
  tile_color 0xcccccc00
  xpos 441
  ypos 666
 }
push $N2c616d00
push $N1df26280
push $N3948eb50
 Switch {
  inputs 3
  which {{parent.lookat}}
  name X
  xpos 269
  ypos 432
 }
 Dot {
  name Dot11
  tile_color 0xcccccc00
  xpos 303
  ypos 604
 }
push $N1f244440
 Copy {
  inputs 2
  from0 rgba.red
  to0 matrix0.0
  from1 rgba.green
  to1 matrix1.0
  from2 rgba.blue
  to2 matrix2.0
  bbox B
  name Copy1
  xpos 59
  ypos 582
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 matrix0.1
  from1 rgba.green
  to1 matrix1.1
  from2 rgba.blue
  to2 matrix2.1
  bbox B
  name Copy2
  xpos 59
  ypos 644
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 matrix0.2
  from1 rgba.green
  to1 matrix1.2
  from2 rgba.blue
  to2 matrix2.2
  bbox B
  name Copy3
  xpos 59
  ypos 706
 }
 Dot {
  name Dot17
  tile_color 0x9e3c6300
  xpos 93
  ypos 914
 }
push $N22160290
 Dot {
  name Dot15
  tile_color 0xcccccc00
  xpos -301
  ypos 606
 }
push $N35ac29e0
 Copy {
  inputs 2
  from0 rgba.red
  to0 matrix0.3
  from1 rgba.green
  to1 matrix1.3
  from2 rgba.blue
  to2 matrix2.3
  bbox B
  name Copy4
  xpos -236
  ypos 584
 }
 Switch {
  inputs 3
  which {{parent.vector_representation}}
  name Switch1
  xpos -236
  ypos 911
 }
 Output {
  name Output1
  xpos -236
  ypos 1009
 }
end_group
Sphere {
 inputs 0
 scaling {1 0.2 0.1}
 uniform_scale 10
 name Sphere1
 xpos -676
 ypos 570
}
push 0
ScanlineRender {
 inputs 2
 conservative_shader_sampling false
 projection_mode uv
 shutteroffset centred
 motion_vectors_type distance
 output_shader_vectors true
 P_channel motion
 name ScanlineRender1
 xpos -676
 ypos 641
}
Shuffle {
 in motion
 alpha white
 name Shuffle2
 label "in \[value in]-->out \[value out]"
 xpos -676
 ypos 665
}
set N13ef1b80 [stack 0]
Group {
 inputs 2
 name TransformVector3_1
 help "Transform a Vector3 in 3 dimensions."
 xpos -1097
 ypos 720
 addUserKnob {20 main_tab l "Normalize Vector3"}
 addUserKnob {4 matrix_source l "Use matrix from" t "The vectors can be transformed either by the an Axis connected to the Axis input, or a pixel matrix connected to the matrix input.\nOnly one can be used at once." M {Axis "Pixel Matrix"}}
 matrix_source "Pixel Matrix"
 addUserKnob {6 is_vec4 l "Use alpha as vector W" t "4x4 Matrices can only transform vectors of dimention 4. The common method to transform a vecor3 with a matrix4 is to promote the vector3 to a vector4 by setting the w dimention to 1.\nBy checking this box, the vector w will be set to the alpha value instead. Only use if you know what you are trying to achieve." +STARTLINE}
 addUserKnob {6 normalize l "Normalize result" t "When enabled, the resulting vector is divided by the vector.w after the transformation.\nFor some type of transformations (for example 3d to 2d projection), this step may be required." -STARTLINE}
 normalize true
 addUserKnob {41 mix T Merge1.mix}
 addUserKnob {26 ""}
 addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
}
 Input {
  inputs 0
  name axis
  xpos 546
  ypos -298
  number 2
 }
 Axis2 {
  useMatrix true
  name MatrixKnob
  xpos 556
  ypos -206
 }
 Input {
  inputs 0
  name matrix
  xpos 358
  ypos -303
  number 1
 }
 Input {
  inputs 0
  name vector3
  xpos 0
  ypos -315
 }
 Dot {
  name Dot1
  tile_color 0xcccccc00
  xpos 34
  ypos -190
 }
set N1566f220 [stack 0]
 Expression {
  channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
  expr0 MatrixKnob.world_matrix.0
  channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
  expr1 MatrixKnob.world_matrix.1
  channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
  expr2 MatrixKnob.world_matrix.2
  channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
  expr3 MatrixKnob.world_matrix.3
  name Expression1
  xpos 195
  ypos -193
 }
 Expression {
  channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
  expr0 MatrixKnob.world_matrix.4
  channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
  expr1 MatrixKnob.world_matrix.5
  channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
  expr2 MatrixKnob.world_matrix.6
  channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
  expr3 MatrixKnob.world_matrix.7
  name Expression2
  xpos 195
  ypos -169
 }
 Expression {
  channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
  expr0 MatrixKnob.world_matrix.8
  channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
  expr1 MatrixKnob.world_matrix.9
  channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
  expr2 MatrixKnob.world_matrix.10
  channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
  expr3 MatrixKnob.world_matrix.11
  name Expression3
  xpos 195
  ypos -145
 }
 Expression {
  channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
  expr0 MatrixKnob.world_matrix.12
  channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
  expr1 MatrixKnob.world_matrix.13
  channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
  expr2 MatrixKnob.world_matrix.14
  channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
  expr3 MatrixKnob.world_matrix.15
  name Expression4
  xpos 195
  ypos -121
 }
 Dot {
  name Dot2
  tile_color 0xcccccc00
  xpos 229
  ypos -36
 }
 Switch {
  inputs 2
  which {{parent.matrix_source}}
  name Switch1
  xpos 358
  ypos -39
 }
 Shuffle {
  in matrix0
  name Shuffle1
  label "in \[value in]-->out \[value out]"
  xpos 358
  ypos 107
 }
set N15c831b0 [stack 0]
 Shuffle {
  in matrix1
  name Shuffle2
  label "in \[value in]-->out \[value out]"
  xpos 358
  ypos 147
 }
set N17286590 [stack 0]
 Shuffle {
  in matrix2
  name Shuffle3
  label "in \[value in]-->out \[value out]"
  xpos 358
  ypos 183
 }
set N15601c50 [stack 0]
 Shuffle {
  in matrix3
  name Shuffle4
  label "in \[value in]-->out \[value out]"
  xpos 358
  ypos 220
 }
push $N15601c50
push $N17286590
push $N15c831b0
push $N1566f220
 Dot {
  name Dot3
  tile_color 0xcccccc00
  xpos 30
  ypos 165
 }
set N1de1ba80 [stack 0]
 BlinkScript {
  inputs 5
  recompileCount 17
  ProgramGroup 1
  KernelDescription "2 \"TransformVector4\" iterate pixelWise c8231fef41d92500d0c2a17ef8af8144bb649972e112d5d8a48aa9a4351386d0 6 \"src\" Read Point \"matrix0\" Read Point \"matrix1\" Read Point \"matrix2\" Read Point \"matrix3\" Read Point \"dst\" Write Point 2 \"Input is Vector 4\" Bool 1 AA== \"Divide by W\" Bool 1 AQ== 2 \"is_vector4\" 1 1 \"do_normalization\" 1 1 0"
  kernelSource "kernel TransformVector4 : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> src; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix0; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix1; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix2; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix3; // the input image\n  Image<eWrite> dst; // the output image\n\n  param:\n    bool is_vector4; \n    bool do_normalization; \n\n  // In define(), parameters can be given labels and default values.\n  void define() \{\n    defineParam(is_vector4, \"Input is Vector 4\", false);\n    defineParam(do_normalization, \"Divide by W\", true);\n  \}\n\n  void process() \{\n    // Read the input image\n    SampleType(src) vector = src();\n    SampleType(matrix0) m0 = matrix0();\n    SampleType(matrix1) m1 = matrix1();\n    SampleType(matrix2) m2 = matrix2();\n    SampleType(matrix3) m3 = matrix3();\n\n    // Create the matrix object (matrix3 in this case)\n    float4x4  matrix;\n    matrix\[0]\[0] = m0.x;\n    matrix\[0]\[1] = m0.y;\n    matrix\[0]\[2] = m0.z;\n    matrix\[0]\[3] = m0.w;\n    matrix\[1]\[0] = m1.x;\n    matrix\[1]\[1] = m1.y;\n    matrix\[1]\[2] = m1.z;\n    matrix\[1]\[3] = m1.w;\n    matrix\[2]\[0] = m2.x;\n    matrix\[2]\[1] = m2.y;\n    matrix\[2]\[2] = m2.z;\n    matrix\[2]\[3] = m2.w;\n    matrix\[3]\[0] = m3.x;\n    matrix\[3]\[1] = m3.y;\n    matrix\[3]\[2] = m3.z;\n    matrix\[3]\[3] = m3.w;\n\n    // Transform\n    float a = vector.w;\n    if (!is_vector4) \{\n      vector.w = 1.0f;\n    \}\n    vector  = matrix*vector;\n    if (do_normalization) \{\n      vector  = vector/vector.w;\n    \}\n    if (!is_vector4) \{\n      vector.w = a;\n    \}\n\n    // Write the result to the output image\n    dst() = float4(vector.x, vector.y, vector.z, vector.w);\n  \}\n\};\n"
  rebuild ""
  "TransformVector4_Input is Vector 4" {{parent.is_vec4}}
  "TransformVector4_Divide by W" {{parent.normalize}}
  rebuild_finalise ""
  name BlinkScript1
  xpos 128
  ypos 156
 }
 Dot {
  name Dot4
  tile_color 0xcccccc00
  xpos 162
  ypos 296
 }
push $N1de1ba80
 Merge2 {
  inputs 2
  operation copy
  bbox B
  name Merge1
  xpos -4
  ypos 293
 }
 Output {
  name Output1
  xpos -4
  ypos 544
 }
end_group
Camera2 {
 inputs 0
 translate {0 0 5}
 name Camera1
 xpos -465
 ypos 726
}
CheckerBoard2 {
 inputs 0
 name CheckerBoard3
 xpos -188
 ypos 618
}
Sphere {
 name Sphere2
 xpos -188
 ypos 719
 disable true
}
push 0
add_layer {P P.red P.green P.blue}
add_layer {N N.red N.green N.blue}
ScanlineRender {
 inputs 3
 conservative_shader_sampling false
 motion_vectors_type distance
 output_shader_vectors true
 P_channel P
 N_channel N
 name ScanlineRender2
 xpos -322
 ypos 817
}
NoOp {
 name picker
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == 'position':\n    x, y = k.value()\n    import math\n    pos = \[n.sample('P.red', x, y), n.sample('P.green', x, y), n.sample('P.blue', x, y)]\n    normal = \[n.sample('N.red', x, y), n.sample('N.green', x, y), n.sample('N.blue', x, y)]\n\n\n    n\['p'].setValue(pos)\n    n\['n'].setValue(normal)\n\n    rot_y = math.degrees(math.atan(normal\[0]/normal\[2]))\n    rot_x = math.degrees(math.acos(normal\[1]))\n    n\['r'].setValue(\[rot_x+90, rot_y, 0])\n"
 xpos -322
 ypos 879
 addUserKnob {20 User}
 addUserKnob {12 position}
 position {938 580}
 addUserKnob {18 p}
 p {-0.08265139163 -0.1909200251 0.9721517563}
 addUserKnob {6 p_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {18 n}
 n {{"Axis3.translate/sqrt(pow2(Axis3.translate.x) + pow2(Axis3.translate.y) + pow2(Axis3.translate.z) )" x1001 -0.08322252333} {"Axis3.translate/sqrt(pow2(Axis3.translate.x) + pow2(Axis3.translate.y) + pow2(Axis3.translate.z) )" x1001 -0.1922392994} {"Axis3.translate/sqrt(pow2(Axis3.translate.x) + pow2(Axis3.translate.y) + pow2(Axis3.translate.z) )" x1001 0.9788693786}}
 addUserKnob {6 n_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 n_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 p_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {18 r}
 r {{0 x1001 191.0834961} {degrees(atan(n.r/n.b))-90 x1001 -4.859545334} {-degrees(acos(n.g))+90 x1001 0}}
 addUserKnob {6 r_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 r_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
Axis2 {
 inputs 0
 translate {1.659999967 -1.720000029 0.9800000191}
 name Axis3
 xpos -978
 ypos 464
}
CheckerBoard2 {
 inputs 0
 name CheckerBoard2
 xpos -937
 ypos 693
}
Ramp {
 p1 {124 1532}
 name Ramp1
 xpos -937
 ypos 765
}
set N13f4b7e0 [stack 0]
Sphere {
 rot_order ZYX
 rotate {24 46 12}
 scaling {1 0.2 0.1}
 uniform_scale 10
 name Sphere3
 xpos -465
 ypos 982
}
Constant {
 inputs 0
 channels rgb
 color {{parent.Sphere3.rotate} {parent.Sphere3.rotate} {parent.Sphere3.rotate} {parent.Sphere3.rotate}}
 name Constant2
 xpos -567
 ypos 789
}
Group {
 inputs 0
 name GenerateMatrix4_1
 help "Generate a Matrix4 based on a Matrix Knob. (Defaults to an identity matrix)"
 knobChanged "node = nuke.thisNode()\nknob = nuke.thisKnob()\n\nif knob.name() == \"inputChange\":\n    with node:\n        format_knob = nuke.toNode('Constant1')\['format']\n    if node.input(0):\n        format_knob.setEnabled(False)\n    else:\n        format_knob.setEnabled(True)\n"
 xpos -473
 ypos 858
 addUserKnob {20 Matrix4}
 addUserKnob {41 format T Constant1.format}
 addUserKnob {26 ""}
 addUserKnob {41 matrix T MatrixKnob.matrix}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {26 divider_copyright l "" +STARTLINE}
 addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x545454ff
  label "- Identity in\n  matrix layers\n- Bypass other channels"
  note_font_size 20
  xpos 411
  ypos 441
  bdwidth 280
  bdheight 262
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x545454ff
  label "Use input format"
  note_font_size 20
  xpos 408
  ypos -57
  bdwidth 281
  bdheight 195
 }
 BackdropNode {
  inputs 0
  name BackdropNode3
  tile_color 0x545454ff
  label "Custom format"
  note_font_size 20
  xpos 793
  ypos -58
  bdwidth 281
  bdheight 195
 }
 BackdropNode {
  inputs 0
  name BackdropNode4
  tile_color 0x464646ff
  label "Used for\nmatrix knob"
  note_font_size 20
  xpos 6
  ypos -57
  bdwidth 284
  bdheight 231
 }
 Axis2 {
  inputs 0
  useMatrix true
  name MatrixKnob
  xpos 111
  ypos 45
 }
 Constant {
  inputs 0
  channels rgb
  name Constant1
  xpos 889
  ypos 13
 }
 Dot {
  name Dot1
  xpos 923
  ypos 224
 }
 Input {
  inputs 0
  name Input
  xpos 509
  ypos 4
 }
 Switch {
  inputs 2
  which {{"!\[exists parent.input0]"}}
  name format
  xpos 509
  ypos 220
 }
 AddChannels {
  channels matrix0
  channels2 matrix1
  channels3 matrix2
  channels4 matrix3
  name AddChannels1
  xpos 509
  ypos 303
 }
 Expression {
  channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
  expr0 MatrixKnob.world_matrix.0
  channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
  expr1 MatrixKnob.world_matrix.1
  channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
  expr2 MatrixKnob.world_matrix.2
  channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
  expr3 MatrixKnob.world_matrix.3
  name Expression1
  xpos 509
  ypos 566
 }
 Expression {
  channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
  expr0 MatrixKnob.world_matrix.4
  channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
  expr1 MatrixKnob.world_matrix.5
  channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
  expr2 MatrixKnob.world_matrix.6
  channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
  expr3 MatrixKnob.world_matrix.7
  name Expression2
  xpos 509
  ypos 590
 }
 Expression {
  channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
  expr0 MatrixKnob.world_matrix.8
  channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
  expr1 MatrixKnob.world_matrix.9
  channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
  expr2 MatrixKnob.world_matrix.10
  channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
  expr3 MatrixKnob.world_matrix.11
  name Expression3
  xpos 509
  ypos 614
 }
 Expression {
  channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
  expr0 MatrixKnob.world_matrix.12
  channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
  expr1 MatrixKnob.world_matrix.13
  channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
  expr2 MatrixKnob.world_matrix.14
  channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
  expr3 MatrixKnob.world_matrix.15
  name Expression4
  xpos 509
  ypos 638
 }
 Output {
  name Output1
  xpos 509
  ypos 755
 }
end_group
Group {
 inputs 2
 name RotateMatrix4_1
 xpos -604
 ypos 883
 addUserKnob {20 Matrix4x4_Rotate}
 addUserKnob {4 rotation_unit l "rotation unit" M {radians degrees}}
 rotation_unit degrees
 addUserKnob {41 rot_order l "rotation order" T Axis1.rot_order}
}
 BackdropNode {
  inputs 0
  name BackdropNode3
  tile_color 0xaaaaaa00
  label Rx
  note_font_size 42
  xpos 505
  ypos 349
  bdwidth 215
  bdheight 180
 }
 BackdropNode {
  inputs 0
  name BackdropNode4
  tile_color 0xaaaaaa00
  label Ry
  note_font_size 42
  xpos 980
  ypos 346
  bdwidth 215
  bdheight 180
 }
 BackdropNode {
  inputs 0
  name BackdropNode5
  tile_color 0xaaaaaa00
  label Rz
  note_font_size 42
  xpos 1495
  ypos 344
  bdwidth 215
  bdheight 180
 }
 Input {
  inputs 0
  name vector
  xpos 664
  ypos 156
  number 1
 }
 Expression {
  expr0 radians(r)
  expr1 radians(g)
  expr2 radians(b)
  expr3 radians(a)
  name Expression1
  xpos 664
  ypos 201
  disable {{1-parent.rotation_unit}}
 }
 Dot {
  name Dot1
  xpos 698
  ypos 251
 }
set N2a0819e0 [stack 0]
 Dot {
  name Dot3
  xpos 698
  ypos 432
 }
set N1ef338a0 [stack 0]
push $N1ef338a0
push $N1ef338a0
push $N1ef338a0
 Input {
  inputs 0
  name matrix
  xpos 344
  ypos 161
 }
 Dot {
  name Dot6
  xpos 378
  ypos 296
 }
set N2c8376c0 [stack 0]
 Dot {
  name Dot7
  xpos 549
  ypos 296
 }
set N2f502df0 [stack 0]
 MergeExpression {
  inputs 2
  channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
  expr0 1
  channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
  expr1 0
  channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
  expr2 0
  channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
  expr3 0
  name MergeExpression9
  xpos 515
  ypos 429
 }
 MergeExpression {
  inputs 2
  channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
  expr0 0
  channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
  expr1 cos(Ar)
  channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
  expr2 -sin(Ar)
  channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
  expr3 0
  name MergeExpression10
  xpos 515
  ypos 453
 }
 MergeExpression {
  inputs 2
  channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
  expr0 0
  channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
  expr1 sin(Ar)
  channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
  expr2 cos(Ar)
  channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
  expr3 0
  name MergeExpression11
  xpos 515
  ypos 477
 }
 MergeExpression {
  inputs 2
  channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
  expr0 0
  channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
  expr1 0
  channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
  expr2 0
  channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
  expr3 1
  name MergeExpression12
  xpos 515
  ypos 501
 }
 NoOp {
  name X
  tile_color 0xff0000ff
  xpos 515
  ypos 542
 }
 Dot {
  name Dot12
  tile_color 0xff0000ff
  xpos 549
  ypos 773
 }
set N2defff30 [stack 0]
 Dot {
  name Dot16
  tile_color 0xff0000ff
  xpos 549
  ypos 907
 }
set N2dc9fb20 [stack 0]
 Dot {
  name Dot21
  tile_color 0xff0000ff
  xpos 549
  ypos 1101
 }
set N43d44d90 [stack 0]
 Dot {
  name Dot31
  tile_color 0xff0000ff
  xpos 549
  ypos 1309
 }
set N58af6b30 [stack 0]
 Dot {
  name Dot35
  tile_color 0xff0000ff
  xpos 549
  ypos 1414
 }
set N2dd6a350 [stack 0]
 Dot {
  name Dot41
  tile_color 0xff0000ff
  xpos 549
  ypos 1621
 }
push $N2a0819e0
 Dot {
  name Dot4
  xpos 1173
  ypos 251
 }
set N94b55110 [stack 0]
 Dot {
  name Dot2
  xpos 1173
  ypos 429
 }
set N2dc05920 [stack 0]
push $N2dc05920
push $N2dc05920
push $N2dc05920
push $N2f502df0
 Dot {
  name Dot8
  xpos 1024
  ypos 296
 }
set N2d790560 [stack 0]
 MergeExpression {
  inputs 2
  channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
  expr0 cos(Ag)
  channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
  expr1 0
  channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
  expr2 sin(Ag)
  channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
  expr3 0
  name MergeExpression13
  xpos 990
  ypos 426
 }
 MergeExpression {
  inputs 2
  channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
  expr0 0
  channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
  expr1 1
  channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
  expr2 0
  channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
  expr3 0
  name MergeExpression14
  xpos 990
  ypos 450
 }
 MergeExpression {
  inputs 2
  channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
  expr0 -sin(Ag)
  channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
  expr1 0
  channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
  expr2 cos(Ag)
  channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
  expr3 0
  name MergeExpression15
  xpos 990
  ypos 472
 }
 MergeExpression {
  inputs 2
  channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
  expr0 0
  channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
  expr1 0
  channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
  expr2 0
  channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
  expr3 1
  name MergeExpression16
  xpos 990
  ypos 498
 }
 NoOp {
  name Y
  tile_color 0xff00ff
  xpos 990
  ypos 532
 }
 Dot {
  name Dot13
  tile_color 0xff00ff
  xpos 1024
  ypos 813
 }
set Nbcb48300 [stack 0]
 Dot {
  name Dot18
  tile_color 0xff00ff
  xpos 1024
  ypos 988
 }
set N249dbfc0 [stack 0]
 Dot {
  name Dot26
  tile_color 0xff00ff
  xpos 1024
  ypos 1061
 }
set N555ff330 [stack 0]
 Dot {
  name Dot29
  tile_color 0xff00ff
  xpos 1024
  ypos 1228
 }
set N58af4e00 [stack 0]
 Dot {
  name Dot36
  tile_color 0xff00ff
  xpos 1024
  ypos 1455
 }
set Nc424d550 [stack 0]
 Dot {
  name Dot40
  tile_color 0xff00ff
  xpos 1024
  ypos 1580
 }
push $N2c8376c0
 Dot {
  name Dot10
  tile_color 0xcccccc00
  xpos 378
  ypos 633
 }
 Dot {
  name Dot11
  tile_color 0xcccccc00
  xpos 460
  ypos 633
 }
set N2dc4a340 [stack 0]
 Dot {
  name Dot15
  tile_color 0xcccccc00
  xpos 694
  ypos 633
 }
set Nf0ba9880 [stack 0]
 Dot {
  name Dot20
  tile_color 0xcccccc00
  xpos 859
  ypos 633
 }
set N42f166f0 [stack 0]
 Dot {
  name Dot28
  tile_color 0xcccccc00
  xpos 1150
  ypos 633
 }
set N58af0ac0 [stack 0]
 Dot {
  name Dot33
  tile_color 0xcccccc00
  xpos 1369
  ypos 633
 }
set Nd8b25600 [stack 0]
 Dot {
  name Dot34
  tile_color 0xcccccc00
  xpos 1643
  ypos 633
 }
push $N94b55110
 Dot {
  name Dot5
  xpos 1688
  ypos 251
 }
 Dot {
  name Dot22
  xpos 1688
  ypos 427
 }
set N2f503b20 [stack 0]
push $N2f503b20
push $N2f503b20
push $N2f503b20
push $N2d790560
 Dot {
  name Dot9
  xpos 1539
  ypos 296
 }
 MergeExpression {
  inputs 2
  channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
  expr0 cos(Ab)
  channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
  expr1 -sin(Ab)
  channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
  expr2 0
  channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
  expr3 0
  name MergeExpression17
  xpos 1505
  ypos 424
 }
 MergeExpression {
  inputs 2
  channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
  expr0 sin(Ab)
  channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
  expr1 cos(Ab)
  channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
  expr2 0
  channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
  expr3 0
  name MergeExpression18
  xpos 1505
  ypos 448
 }
 MergeExpression {
  inputs 2
  channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
  expr0 0
  channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
  expr1 0
  channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
  expr2 1
  channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
  expr3 0
  name MergeExpression19
  xpos 1505
  ypos 472
 }
 MergeExpression {
  inputs 2
  channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
  expr0 0
  channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
  expr1 0
  channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
  expr2 0
  channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
  expr3 1
  name MergeExpression20
  xpos 1505
  ypos 496
 }
 NoOp {
  name Z
  tile_color 0xffff
  xpos 1505
  ypos 540
 }
 Dot {
  name Dot17
  tile_color 0xffff
  xpos 1539
  ypos 788
 }
 Dot {
  name Dot14
  tile_color 0xffff
  xpos 1539
  ypos 854
 }
set Na4fb82f0 [stack 0]
 Dot {
  name Dot19
  tile_color 0xffff
  xpos 1539
  ypos 947
 }
set N2dd23040 [stack 0]
 Dot {
  name Dot27
  tile_color 0xffff
  xpos 1539
  ypos 1142
 }
set Na4682880 [stack 0]
 Dot {
  name Dot30
  tile_color 0xffff
  xpos 1539
  ypos 1268
 }
set N485e5fa0 [stack 0]
 Dot {
  name Dot37
  tile_color 0xffff
  xpos 1539
  ypos 1374
 }
set N564e9340 [stack 0]
 Dot {
  name Dot39
  tile_color 0xffff
  xpos 1539
  ypos 1540
 }
 Group {
  inputs 2
  name ProductMatrix4_15
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 1609
  ypos 1537
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set Nd8b0fc90 [stack 0]
push $Nd8b0fc90
push $Nd8b0fc90
push $Nd8b0fc90
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Group {
  inputs 2
  name ProductMatrix4_16
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 1609
  ypos 1577
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set Nd89edd60 [stack 0]
push $Nd89edd60
push $Nd89edd60
push $Nd89edd60
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Group {
  inputs 2
  name ProductMatrix4_17
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 1609
  ypos 1618
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set Nd8a3d120 [stack 0]
push $Nd8a3d120
push $Nd8a3d120
push $Nd8a3d120
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Dot {
  name Dot42
  tile_color 0xcccccc00
  xpos 1643
  ypos 1796
 }
push $Nc424d550
push $N2dd6a350
push $Nd8b25600
push $N564e9340
 Group {
  inputs 2
  name ProductMatrix4_12
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 1335
  ypos 1371
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set Nf0ff24f0 [stack 0]
push $Nf0ff24f0
push $Nf0ff24f0
push $Nf0ff24f0
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Group {
  inputs 2
  name ProductMatrix4_13
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 1335
  ypos 1411
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set Ne8e954a0 [stack 0]
push $Ne8e954a0
push $Ne8e954a0
push $Ne8e954a0
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Group {
  inputs 2
  name ProductMatrix4_14
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 1335
  ypos 1452
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set Ne8ee4860 [stack 0]
push $Ne8ee4860
push $Ne8ee4860
push $Ne8ee4860
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Dot {
  name Dot38
  tile_color 0xcccccc00
  xpos 1369
  ypos 1791
 }
push $N58af6b30
push $N485e5fa0
push $N58af0ac0
push $N58af4e00
 Group {
  inputs 2
  name ProductMatrix4_9
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 1116
  ypos 1225
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set N747920c0 [stack 0]
push $N747920c0
push $N747920c0
push $N747920c0
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Group {
  inputs 2
  name ProductMatrix4_10
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 1116
  ypos 1265
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set N506e3410 [stack 0]
push $N506e3410
push $N506e3410
push $N506e3410
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Group {
  inputs 2
  name ProductMatrix4_11
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 1116
  ypos 1306
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set N4184ad40 [stack 0]
push $N4184ad40
push $N4184ad40
push $N4184ad40
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Dot {
  name Dot32
  tile_color 0xcccccc00
  xpos 1150
  ypos 1788
 }
push $Na4682880
push $N43d44d90
push $N42f166f0
push $N555ff330
 Group {
  inputs 2
  name ProductMatrix4_6
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 825
  ypos 1058
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set Nc45e5ab0 [stack 0]
push $Nc45e5ab0
push $Nc45e5ab0
push $Nc45e5ab0
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Group {
  inputs 2
  name ProductMatrix4_7
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 825
  ypos 1098
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set N42f139c0 [stack 0]
push $N42f139c0
push $N42f139c0
push $N42f139c0
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Group {
  inputs 2
  name ProductMatrix4_8
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 825
  ypos 1139
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set N3ea2b3b0 [stack 0]
push $N3ea2b3b0
push $N3ea2b3b0
push $N3ea2b3b0
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Dot {
  name Dot25
  tile_color 0xcccccc00
  xpos 859
  ypos 1801
 }
push $N249dbfc0
push $N2dd23040
push $Nf0ba9880
push $N2dc9fb20
 Group {
  inputs 2
  name ProductMatrix4_3
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 660
  ypos 904
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set Nbcb87a70 [stack 0]
push $Nbcb87a70
push $Nbcb87a70
push $Nbcb87a70
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Group {
  inputs 2
  name ProductMatrix4_4
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 660
  ypos 944
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set N42f351d0 [stack 0]
push $N42f351d0
push $N42f351d0
push $N42f351d0
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Group {
  inputs 2
  name ProductMatrix4_5
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 660
  ypos 985
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set N676fe410 [stack 0]
push $N676fe410
push $N676fe410
push $N676fe410
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Dot {
  name Dot24
  tile_color 0xcccccc00
  xpos 694
  ypos 1802
 }
push $Na4fb82f0
push $Nbcb48300
push $N2dc4a340
push $N2defff30
 Group {
  inputs 2
  name ProductMatrix4_
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 426
  ypos 770
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set N19fff250 [stack 0]
push $N19fff250
push $N19fff250
push $N19fff250
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Group {
  inputs 2
  name ProductMatrix4_1
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 426
  ypos 810
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set N1f0ac110 [stack 0]
push $N1f0ac110
push $N1f0ac110
push $N1f0ac110
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Group {
  inputs 2
  name ProductMatrix4_2
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 426
  ypos 851
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set N37810310 [stack 0]
push $N37810310
push $N37810310
push $N37810310
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Dot {
  name Dot23
  tile_color 0xcccccc00
  xpos 460
  ypos 1794
 }
 Switch {
  inputs 6
  which {{parent.rot_order}}
  name Switch1
  xpos 937
  ypos 1948
 }
 Output {
  name Output1
  xpos 937
  ypos 2058
 }
 Axis2 {
  inputs 0
  rot_order ZYX
  name Axis1
  label "Only used for rotation order knob"
  xpos 98
  ypos 187
 }
end_group
push $N13ef1b80
Group {
 inputs 2
 name TransformVector3_2
 help "Transform a Vector3 in 3 dimensions."
 xpos -691
 ypos 976
 addUserKnob {20 main_tab l "Normalize Vector3"}
 addUserKnob {4 matrix_source l "Use matrix from" t "The vectors can be transformed either by the an Axis connected to the Axis input, or a pixel matrix connected to the matrix input.\nOnly one can be used at once." M {Axis "Pixel Matrix"}}
 matrix_source "Pixel Matrix"
 addUserKnob {6 is_vec4 l "Use alpha as vector W" t "4x4 Matrices can only transform vectors of dimention 4. The common method to transform a vecor3 with a matrix4 is to promote the vector3 to a vector4 by setting the w dimention to 1.\nBy checking this box, the vector w will be set to the alpha value instead. Only use if you know what you are trying to achieve." +STARTLINE}
 addUserKnob {6 normalize l "Normalize result" t "When enabled, the resulting vector is divided by the vector.w after the transformation.\nFor some type of transformations (for example 3d to 2d projection), this step may be required." -STARTLINE}
 normalize true
 addUserKnob {41 mix T Merge1.mix}
 addUserKnob {26 ""}
 addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
}
 Input {
  inputs 0
  name axis
  xpos 546
  ypos -298
  number 2
 }
 Axis2 {
  useMatrix true
  name MatrixKnob
  xpos 556
  ypos -206
 }
 Input {
  inputs 0
  name matrix
  xpos 358
  ypos -303
  number 1
 }
 Input {
  inputs 0
  name vector3
  xpos 0
  ypos -315
 }
 Dot {
  name Dot1
  tile_color 0xcccccc00
  xpos 34
  ypos -190
 }
set N16061bd0 [stack 0]
 Expression {
  channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
  expr0 MatrixKnob.world_matrix.0
  channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
  expr1 MatrixKnob.world_matrix.1
  channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
  expr2 MatrixKnob.world_matrix.2
  channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
  expr3 MatrixKnob.world_matrix.3
  name Expression1
  xpos 195
  ypos -193
 }
 Expression {
  channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
  expr0 MatrixKnob.world_matrix.4
  channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
  expr1 MatrixKnob.world_matrix.5
  channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
  expr2 MatrixKnob.world_matrix.6
  channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
  expr3 MatrixKnob.world_matrix.7
  name Expression2
  xpos 195
  ypos -169
 }
 Expression {
  channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
  expr0 MatrixKnob.world_matrix.8
  channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
  expr1 MatrixKnob.world_matrix.9
  channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
  expr2 MatrixKnob.world_matrix.10
  channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
  expr3 MatrixKnob.world_matrix.11
  name Expression3
  xpos 195
  ypos -145
 }
 Expression {
  channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
  expr0 MatrixKnob.world_matrix.12
  channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
  expr1 MatrixKnob.world_matrix.13
  channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
  expr2 MatrixKnob.world_matrix.14
  channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
  expr3 MatrixKnob.world_matrix.15
  name Expression4
  xpos 195
  ypos -121
 }
 Dot {
  name Dot2
  tile_color 0xcccccc00
  xpos 229
  ypos -36
 }
 Switch {
  inputs 2
  which {{parent.matrix_source}}
  name Switch1
  xpos 358
  ypos -39
 }
 Shuffle {
  in matrix0
  name Shuffle1
  label "in \[value in]-->out \[value out]"
  xpos 358
  ypos 107
 }
set N6cfdc870 [stack 0]
 Shuffle {
  in matrix1
  name Shuffle2
  label "in \[value in]-->out \[value out]"
  xpos 358
  ypos 147
 }
set N6cfecb30 [stack 0]
 Shuffle {
  in matrix2
  name Shuffle3
  label "in \[value in]-->out \[value out]"
  xpos 358
  ypos 183
 }
set Nacf9f140 [stack 0]
 Shuffle {
  in matrix3
  name Shuffle4
  label "in \[value in]-->out \[value out]"
  xpos 358
  ypos 220
 }
push $Nacf9f140
push $N6cfecb30
push $N6cfdc870
push $N16061bd0
 Dot {
  name Dot3
  tile_color 0xcccccc00
  xpos 30
  ypos 165
 }
set Nacfbf5f0 [stack 0]
 BlinkScript {
  inputs 5
  recompileCount 17
  ProgramGroup 1
  KernelDescription "2 \"TransformVector4\" iterate pixelWise c8231fef41d92500d0c2a17ef8af8144bb649972e112d5d8a48aa9a4351386d0 6 \"src\" Read Point \"matrix0\" Read Point \"matrix1\" Read Point \"matrix2\" Read Point \"matrix3\" Read Point \"dst\" Write Point 2 \"Input is Vector 4\" Bool 1 AA== \"Divide by W\" Bool 1 AQ== 2 \"is_vector4\" 1 1 \"do_normalization\" 1 1 0"
  kernelSource "kernel TransformVector4 : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> src; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix0; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix1; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix2; // the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> matrix3; // the input image\n  Image<eWrite> dst; // the output image\n\n  param:\n    bool is_vector4; \n    bool do_normalization; \n\n  // In define(), parameters can be given labels and default values.\n  void define() \{\n    defineParam(is_vector4, \"Input is Vector 4\", false);\n    defineParam(do_normalization, \"Divide by W\", true);\n  \}\n\n  void process() \{\n    // Read the input image\n    SampleType(src) vector = src();\n    SampleType(matrix0) m0 = matrix0();\n    SampleType(matrix1) m1 = matrix1();\n    SampleType(matrix2) m2 = matrix2();\n    SampleType(matrix3) m3 = matrix3();\n\n    // Create the matrix object (matrix3 in this case)\n    float4x4  matrix;\n    matrix\[0]\[0] = m0.x;\n    matrix\[0]\[1] = m0.y;\n    matrix\[0]\[2] = m0.z;\n    matrix\[0]\[3] = m0.w;\n    matrix\[1]\[0] = m1.x;\n    matrix\[1]\[1] = m1.y;\n    matrix\[1]\[2] = m1.z;\n    matrix\[1]\[3] = m1.w;\n    matrix\[2]\[0] = m2.x;\n    matrix\[2]\[1] = m2.y;\n    matrix\[2]\[2] = m2.z;\n    matrix\[2]\[3] = m2.w;\n    matrix\[3]\[0] = m3.x;\n    matrix\[3]\[1] = m3.y;\n    matrix\[3]\[2] = m3.z;\n    matrix\[3]\[3] = m3.w;\n\n    // Transform\n    float a = vector.w;\n    if (!is_vector4) \{\n      vector.w = 1.0f;\n    \}\n    vector  = matrix*vector;\n    if (do_normalization) \{\n      vector  = vector/vector.w;\n    \}\n    if (!is_vector4) \{\n      vector.w = a;\n    \}\n\n    // Write the result to the output image\n    dst() = float4(vector.x, vector.y, vector.z, vector.w);\n  \}\n\};\n"
  rebuild ""
  "TransformVector4_Input is Vector 4" {{parent.is_vec4}}
  "TransformVector4_Divide by W" {{parent.normalize}}
  rebuild_finalise ""
  name BlinkScript1
  xpos 128
  ypos 156
 }
 Dot {
  name Dot4
  tile_color 0xcccccc00
  xpos 162
  ypos 296
 }
push $Nacfbf5f0
 Merge2 {
  inputs 2
  operation copy
  bbox B
  name Merge1
  xpos -4
  ypos 293
 }
 Output {
  name Output1
  xpos -4
  ypos 544
 }
end_group
push $N13f4b7e0
Grade {
 white {2.5 0.44 0.33 1}
 white_panelDropped true
 name Grade1
 xpos -936
 ypos 861
}
PositionToPoints2 {
 inputs 2
 display textured
 render_mode textured
 detail 0.005
 pointSize 2
 name PositionToPoints1
 xpos -937
 ypos 937
}
Viewer {
 inputs 2
 frame_range 1001-1296
 colour_sample_bbox {0.45703125 -0.115234375 0.4580078125 -0.1142578125}
 samplepoints {{0.45703125 -0.115234375}
   }
 name Viewer1
 xpos -123
 ypos 278
}
Group {
 inputs 0
 name RotateMatrix4_
 xpos -2219
 ypos 1137
 addUserKnob {20 Matrix4x4_Rotate}
 addUserKnob {4 rotation_unit l "rotation unit" M {radians degrees}}
 rotation_unit degrees
 addUserKnob {41 rot_order l "rotation order" T Axis1.rot_order}
}
 BackdropNode {
  inputs 0
  name BackdropNode3
  tile_color 0xaaaaaa00
  label Rx
  note_font_size 42
  xpos 505
  ypos 349
  bdwidth 215
  bdheight 180
 }
 BackdropNode {
  inputs 0
  name BackdropNode4
  tile_color 0xaaaaaa00
  label Ry
  note_font_size 42
  xpos 980
  ypos 346
  bdwidth 215
  bdheight 180
 }
 BackdropNode {
  inputs 0
  name BackdropNode5
  tile_color 0xaaaaaa00
  label Rz
  note_font_size 42
  xpos 1495
  ypos 344
  bdwidth 215
  bdheight 180
 }
 Input {
  inputs 0
  name vector
  xpos 664
  ypos 156
  number 1
 }
 Expression {
  expr0 radians(r)
  expr1 radians(g)
  expr2 radians(b)
  expr3 radians(a)
  name Expression1
  xpos 664
  ypos 201
  disable {{1-parent.rotation_unit}}
 }
 Dot {
  name Dot1
  xpos 698
  ypos 251
 }
set Nc4142d10 [stack 0]
 Dot {
  name Dot3
  xpos 698
  ypos 432
 }
set N502e3990 [stack 0]
push $N502e3990
push $N502e3990
push $N502e3990
 Input {
  inputs 0
  name matrix
  xpos 344
  ypos 161
 }
 Dot {
  name Dot6
  xpos 378
  ypos 296
 }
set N42f3b530 [stack 0]
 Dot {
  name Dot7
  xpos 549
  ypos 296
 }
set N52e82690 [stack 0]
 MergeExpression {
  inputs 2
  channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
  expr0 1
  channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
  expr1 0
  channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
  expr2 0
  channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
  expr3 0
  name MergeExpression9
  xpos 515
  ypos 429
 }
 MergeExpression {
  inputs 2
  channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
  expr0 0
  channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
  expr1 cos(Ar)
  channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
  expr2 -sin(Ar)
  channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
  expr3 0
  name MergeExpression10
  xpos 515
  ypos 453
 }
 MergeExpression {
  inputs 2
  channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
  expr0 0
  channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
  expr1 sin(Ar)
  channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
  expr2 cos(Ar)
  channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
  expr3 0
  name MergeExpression11
  xpos 515
  ypos 477
 }
 MergeExpression {
  inputs 2
  channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
  expr0 0
  channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
  expr1 0
  channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
  expr2 0
  channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
  expr3 1
  name MergeExpression12
  xpos 515
  ypos 501
 }
 NoOp {
  name X
  tile_color 0xff0000ff
  xpos 515
  ypos 542
 }
 Dot {
  name Dot12
  tile_color 0xff0000ff
  xpos 549
  ypos 773
 }
set N3b3a7680 [stack 0]
 Dot {
  name Dot16
  tile_color 0xff0000ff
  xpos 549
  ypos 907
 }
set N3f7deff0 [stack 0]
 Dot {
  name Dot21
  tile_color 0xff0000ff
  xpos 549
  ypos 1101
 }
set N3f7e3a90 [stack 0]
 Dot {
  name Dot31
  tile_color 0xff0000ff
  xpos 549
  ypos 1309
 }
set N3f7e80f0 [stack 0]
 Dot {
  name Dot35
  tile_color 0xff0000ff
  xpos 549
  ypos 1414
 }
set N1f1e44d0 [stack 0]
 Dot {
  name Dot41
  tile_color 0xff0000ff
  xpos 549
  ypos 1621
 }
push $Nc4142d10
 Dot {
  name Dot4
  xpos 1173
  ypos 251
 }
set N1f1ed880 [stack 0]
 Dot {
  name Dot2
  xpos 1173
  ypos 429
 }
set N1f1f21d0 [stack 0]
push $N1f1f21d0
push $N1f1f21d0
push $N1f1f21d0
push $N52e82690
 Dot {
  name Dot8
  xpos 1024
  ypos 296
 }
set N1f1f6780 [stack 0]
 MergeExpression {
  inputs 2
  channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
  expr0 cos(Ag)
  channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
  expr1 0
  channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
  expr2 sin(Ag)
  channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
  expr3 0
  name MergeExpression13
  xpos 990
  ypos 426
 }
 MergeExpression {
  inputs 2
  channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
  expr0 0
  channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
  expr1 1
  channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
  expr2 0
  channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
  expr3 0
  name MergeExpression14
  xpos 990
  ypos 450
 }
 MergeExpression {
  inputs 2
  channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
  expr0 -sin(Ag)
  channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
  expr1 0
  channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
  expr2 cos(Ag)
  channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
  expr3 0
  name MergeExpression15
  xpos 990
  ypos 472
 }
 MergeExpression {
  inputs 2
  channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
  expr0 0
  channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
  expr1 0
  channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
  expr2 0
  channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
  expr3 1
  name MergeExpression16
  xpos 990
  ypos 498
 }
 NoOp {
  name Y
  tile_color 0xff00ff
  xpos 990
  ypos 532
 }
 Dot {
  name Dot13
  tile_color 0xff00ff
  xpos 1024
  ypos 813
 }
set N3af3db80 [stack 0]
 Dot {
  name Dot18
  tile_color 0xff00ff
  xpos 1024
  ypos 988
 }
set N3af426d0 [stack 0]
 Dot {
  name Dot26
  tile_color 0xff00ff
  xpos 1024
  ypos 1061
 }
set N3af46fe0 [stack 0]
 Dot {
  name Dot29
  tile_color 0xff00ff
  xpos 1024
  ypos 1228
 }
set N3af4b570 [stack 0]
 Dot {
  name Dot36
  tile_color 0xff00ff
  xpos 1024
  ypos 1455
 }
set N3af50110 [stack 0]
 Dot {
  name Dot40
  tile_color 0xff00ff
  xpos 1024
  ypos 1580
 }
push $N42f3b530
 Dot {
  name Dot10
  tile_color 0xcccccc00
  xpos 378
  ypos 633
 }
 Dot {
  name Dot11
  tile_color 0xcccccc00
  xpos 460
  ypos 633
 }
set N3af5dd10 [stack 0]
 Dot {
  name Dot15
  tile_color 0xcccccc00
  xpos 694
  ypos 633
 }
set N3af62610 [stack 0]
 Dot {
  name Dot20
  tile_color 0xcccccc00
  xpos 859
  ypos 633
 }
set N3af66c10 [stack 0]
 Dot {
  name Dot28
  tile_color 0xcccccc00
  xpos 1150
  ypos 633
 }
set N3af6b420 [stack 0]
 Dot {
  name Dot33
  tile_color 0xcccccc00
  xpos 1369
  ypos 633
 }
set N3af700a0 [stack 0]
 Dot {
  name Dot34
  tile_color 0xcccccc00
  xpos 1643
  ypos 633
 }
push $N1f1ed880
 Dot {
  name Dot5
  xpos 1688
  ypos 251
 }
 Dot {
  name Dot22
  xpos 1688
  ypos 427
 }
set N3af7d660 [stack 0]
push $N3af7d660
push $N3af7d660
push $N3af7d660
push $N1f1f6780
 Dot {
  name Dot9
  xpos 1539
  ypos 296
 }
 MergeExpression {
  inputs 2
  channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
  expr0 cos(Ab)
  channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
  expr1 -sin(Ab)
  channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
  expr2 0
  channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
  expr3 0
  name MergeExpression17
  xpos 1505
  ypos 424
 }
 MergeExpression {
  inputs 2
  channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
  expr0 sin(Ab)
  channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
  expr1 cos(Ab)
  channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
  expr2 0
  channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
  expr3 0
  name MergeExpression18
  xpos 1505
  ypos 448
 }
 MergeExpression {
  inputs 2
  channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
  expr0 0
  channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
  expr1 0
  channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
  expr2 1
  channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
  expr3 0
  name MergeExpression19
  xpos 1505
  ypos 472
 }
 MergeExpression {
  inputs 2
  channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
  expr0 0
  channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
  expr1 0
  channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
  expr2 0
  channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
  expr3 1
  name MergeExpression20
  xpos 1505
  ypos 496
 }
 NoOp {
  name Z
  tile_color 0xffff
  xpos 1505
  ypos 540
 }
 Dot {
  name Dot17
  tile_color 0xffff
  xpos 1539
  ypos 788
 }
 Dot {
  name Dot14
  tile_color 0xffff
  xpos 1539
  ypos 854
 }
set N3ae440a0 [stack 0]
 Dot {
  name Dot19
  tile_color 0xffff
  xpos 1539
  ypos 947
 }
set N3ae48990 [stack 0]
 Dot {
  name Dot27
  tile_color 0xffff
  xpos 1539
  ypos 1142
 }
set N3ae4cd90 [stack 0]
 Dot {
  name Dot30
  tile_color 0xffff
  xpos 1539
  ypos 1268
 }
set N3ae51b90 [stack 0]
 Dot {
  name Dot37
  tile_color 0xffff
  xpos 1539
  ypos 1374
 }
set N3ae56460 [stack 0]
 Dot {
  name Dot39
  tile_color 0xffff
  xpos 1539
  ypos 1540
 }
 Group {
  inputs 2
  name ProductMatrix4_15
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 1609
  ypos 1537
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set N3ae6c2d0 [stack 0]
push $N3ae6c2d0
push $N3ae6c2d0
push $N3ae6c2d0
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Group {
  inputs 2
  name ProductMatrix4_16
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 1609
  ypos 1577
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set N5c7002b0 [stack 0]
push $N5c7002b0
push $N5c7002b0
push $N5c7002b0
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Group {
  inputs 2
  name ProductMatrix4_17
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 1609
  ypos 1618
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set N5c74f310 [stack 0]
push $N5c74f310
push $N5c74f310
push $N5c74f310
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Dot {
  name Dot42
  tile_color 0xcccccc00
  xpos 1643
  ypos 1796
 }
push $N3af50110
push $N1f1e44d0
push $N3af700a0
push $N3ae56460
 Group {
  inputs 2
  name ProductMatrix4_12
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 1335
  ypos 1371
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set N3ad61c90 [stack 0]
push $N3ad61c90
push $N3ad61c90
push $N3ad61c90
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Group {
  inputs 2
  name ProductMatrix4_13
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 1335
  ypos 1411
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set N3ac30d80 [stack 0]
push $N3ac30d80
push $N3ac30d80
push $N3ac30d80
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Group {
  inputs 2
  name ProductMatrix4_14
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 1335
  ypos 1452
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set N3ac7fed0 [stack 0]
push $N3ac7fed0
push $N3ac7fed0
push $N3ac7fed0
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Dot {
  name Dot38
  tile_color 0xcccccc00
  xpos 1369
  ypos 1791
 }
push $N3f7e80f0
push $N3ae51b90
push $N3af6b420
push $N3af4b570
 Group {
  inputs 2
  name ProductMatrix4_9
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 1116
  ypos 1225
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set N3ab53a90 [stack 0]
push $N3ab53a90
push $N3ab53a90
push $N3ab53a90
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Group {
  inputs 2
  name ProductMatrix4_10
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 1116
  ypos 1265
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set N3aba2cf0 [stack 0]
push $N3aba2cf0
push $N3aba2cf0
push $N3aba2cf0
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Group {
  inputs 2
  name ProductMatrix4_11
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 1116
  ypos 1306
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set N3aa71bf0 [stack 0]
push $N3aa71bf0
push $N3aa71bf0
push $N3aa71bf0
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Dot {
  name Dot32
  tile_color 0xcccccc00
  xpos 1150
  ypos 1788
 }
push $N3ae4cd90
push $N3f7e3a90
push $N3af66c10
push $N3af46fe0
 Group {
  inputs 2
  name ProductMatrix4_6
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 825
  ypos 1058
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set N3a9455e0 [stack 0]
push $N3a9455e0
push $N3a9455e0
push $N3a9455e0
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Group {
  inputs 2
  name ProductMatrix4_7
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 825
  ypos 1098
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set N3a994610 [stack 0]
push $N3a994610
push $N3a994610
push $N3a994610
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Group {
  inputs 2
  name ProductMatrix4_8
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 825
  ypos 1139
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set N3a8636e0 [stack 0]
push $N3a8636e0
push $N3a8636e0
push $N3a8636e0
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Dot {
  name Dot25
  tile_color 0xcccccc00
  xpos 859
  ypos 1801
 }
push $N3af426d0
push $N3ae48990
push $N3af62610
push $N3f7deff0
 Group {
  inputs 2
  name ProductMatrix4_3
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 660
  ypos 904
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set N3a737030 [stack 0]
push $N3a737030
push $N3a737030
push $N3a737030
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Group {
  inputs 2
  name ProductMatrix4_4
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 660
  ypos 944
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set N3a786160 [stack 0]
push $N3a786160
push $N3a786160
push $N3a786160
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Group {
  inputs 2
  name ProductMatrix4_5
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 660
  ypos 985
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set N3a6551e0 [stack 0]
push $N3a6551e0
push $N3a6551e0
push $N3a6551e0
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Dot {
  name Dot24
  tile_color 0xcccccc00
  xpos 694
  ypos 1802
 }
push $N3ae440a0
push $N3af3db80
push $N3af5dd10
push $N3b3a7680
 Group {
  inputs 2
  name ProductMatrix4_
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 426
  ypos 770
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set N3a528b40 [stack 0]
push $N3a528b40
push $N3a528b40
push $N3a528b40
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Group {
  inputs 2
  name ProductMatrix4_1
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 426
  ypos 810
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set N3a577c40 [stack 0]
push $N3a577c40
push $N3a577c40
push $N3a577c40
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Group {
  inputs 2
  name ProductMatrix4_2
  help "Multiply two pixel based Matrix4 (Defined as layers matrix0, matrix1, matrix2 and matrix3)"
  xpos 426
  ypos 851
  addUserKnob {20 Matrix4Product l "Product Matrix4"}
  addUserKnob {26 Description l "" +STARTLINE T "Multiply two matrix4: matrixA*matrixB"}
  addUserKnob {26 divider_copyright l "" +STARTLINE}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name matrixA
   xpos 344
   ypos 139
  }
  Dot {
   name Dot3
   xpos 378
   ypos 252
  }
set N3a446bf0 [stack 0]
push $N3a446bf0
push $N3a446bf0
push $N3a446bf0
  Input {
   inputs 0
   name matrixB
   xpos 21
   ypos 142
   number 1
  }
  MergeExpression {
   inputs 2
   channel0 {matrix0.0 -matrix0.1 -matrix0.2 -matrix0.3}
   expr0 (Bmatrix0.0*Amatrix0.0)+(Bmatrix0.1*Amatrix1.0)+(Bmatrix0.2*Amatrix2.0)+(Bmatrix0.3*Amatrix3.0)
   channel1 {-matrix0.0 matrix0.1 -matrix0.2 -matrix0.3}
   expr1 (Bmatrix0.0*Amatrix0.1)+(Bmatrix0.1*Amatrix1.1)+(Bmatrix0.2*Amatrix2.1)+(Bmatrix0.3*Amatrix3.1)
   channel2 {-matrix0.0 -matrix0.1 matrix0.2 -matrix0.3}
   expr2 (Bmatrix0.0*Amatrix0.2)+(Bmatrix0.1*Amatrix1.2)+(Bmatrix0.2*Amatrix2.2)+(Bmatrix0.3*Amatrix3.2)
   channel3 {-matrix0.0 -matrix0.1 -matrix0.2 matrix0.3}
   expr3 (Bmatrix0.0*Amatrix0.3)+(Bmatrix0.1*Amatrix1.3)+(Bmatrix0.2*Amatrix2.3)+(Bmatrix0.3*Amatrix3.3)
   name MergeExpression1
   xpos 21
   ypos 249
  }
  MergeExpression {
   inputs 2
   channel0 {matrix1.0 -matrix1.1 -matrix1.2 -matrix1.3}
   expr0 (Bmatrix1.0*Amatrix0.0)+(Bmatrix1.1*Amatrix1.0)+(Bmatrix1.2*Amatrix2.0)+(Bmatrix1.3*Amatrix3.0)
   channel1 {-matrix1.0 matrix1.1 -matrix1.2 -matrix1.3}
   expr1 (Bmatrix1.0*Amatrix0.1)+(Bmatrix1.1*Amatrix1.1)+(Bmatrix1.2*Amatrix2.1)+(Bmatrix1.3*Amatrix3.1)
   channel2 {-matrix1.0 -matrix1.1 matrix1.2 -matrix1.3}
   expr2 (Bmatrix1.0*Amatrix0.2)+(Bmatrix1.1*Amatrix1.2)+(Bmatrix1.2*Amatrix2.2)+(Bmatrix1.3*Amatrix3.2)
   channel3 {-matrix1.0 -matrix1.1 -matrix1.2 matrix1.3}
   expr3 (Bmatrix1.0*Amatrix0.3)+(Bmatrix1.1*Amatrix1.3)+(Bmatrix1.2*Amatrix2.3)+(Bmatrix1.3*Amatrix3.3)
   name MergeExpression2
   xpos 21
   ypos 273
  }
  MergeExpression {
   inputs 2
   channel0 {matrix2.0 -matrix2.1 -matrix2.2 -matrix2.3}
   expr0 (Bmatrix2.0*Amatrix0.0)+(Bmatrix2.1*Amatrix1.0)+(Bmatrix2.2*Amatrix2.0)+(Bmatrix2.3*Amatrix3.0)
   channel1 {-matrix2.0 matrix2.1 -matrix2.2 -matrix2.3}
   expr1 (Bmatrix2.0*Amatrix0.1)+(Bmatrix2.1*Amatrix1.1)+(Bmatrix2.2*Amatrix2.1)+(Bmatrix2.3*Amatrix3.1)
   channel2 {-matrix2.0 -matrix2.1 matrix2.2 -matrix2.3}
   expr2 (Bmatrix2.0*Amatrix0.2)+(Bmatrix2.1*Amatrix1.2)+(Bmatrix2.2*Amatrix2.2)+(Bmatrix2.3*Amatrix3.2)
   channel3 {-matrix2.0 -matrix2.1 -matrix2.2 matrix2.3}
   expr3 (Bmatrix2.0*Amatrix0.3)+(Bmatrix2.1*Amatrix1.3)+(Bmatrix2.2*Amatrix2.3)+(Bmatrix2.3*Amatrix3.3)
   name MergeExpression3
   xpos 21
   ypos 297
  }
  MergeExpression {
   inputs 2
   channel0 {matrix3.0 -matrix3.1 -matrix3.2 -matrix3.3}
   expr0 (Bmatrix3.0*Amatrix0.0)+(Bmatrix3.1*Amatrix1.0)+(Bmatrix3.2*Amatrix2.0)+(Bmatrix3.3*Amatrix3.0)
   channel1 {-matrix3.0 matrix3.1 -matrix3.2 -matrix3.3}
   expr1 (Bmatrix3.0*Amatrix0.1)+(Bmatrix3.1*Amatrix1.1)+(Bmatrix3.2*Amatrix2.1)+(Bmatrix3.3*Amatrix3.1)
   channel2 {-matrix3.0 -matrix3.1 matrix3.2 -matrix3.3}
   expr2 (Bmatrix3.0*Amatrix0.2)+(Bmatrix3.1*Amatrix1.2)+(Bmatrix3.2*Amatrix2.2)+(Bmatrix3.3*Amatrix3.2)
   channel3 {-matrix3.0 -matrix3.1 -matrix3.2 matrix3.3}
   expr3 (Bmatrix3.0*Amatrix0.3)+(Bmatrix3.1*Amatrix1.3)+(Bmatrix3.2*Amatrix2.3)+(Bmatrix3.3*Amatrix3.3)
   name MergeExpression4
   xpos 21
   ypos 321
  }
  Output {
   name Output1
   xpos 21
   ypos 421
  }
 end_group
 Dot {
  name Dot23
  tile_color 0xcccccc00
  xpos 460
  ypos 1794
 }
 Switch {
  inputs 6
  which {{parent.rot_order}}
  name Switch1
  xpos 937
  ypos 1948
 }
 Output {
  name Output1
  xpos 937
  ypos 2058
 }
 Axis2 {
  inputs 0
  rot_order ZYX
  name Axis1
  label "Only used for rotation order knob"
  xpos 98
  ypos 187
 }
end_group
push $N12575730
Group {
 name Group1
 xpos -775
 ypos 794
}
 Input {
  inputs 0
  name vector3
  xpos 0
  ypos -2
 }
 Group {
  name NormalizeVector3_
  help "Normalize the magnitude of a Vector3 (to be of magnitude 1)"
  xpos 0
  ypos 103
  addUserKnob {20 main_tab l "Normalize Vector3"}
  addUserKnob {41 in l "Vector B Layer" t "Layer containing the vector information for input B" T vector_layer.in}
  addUserKnob {26 ""}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name vectorB
   xpos 0
  }
  Dot {
   name Dot1
   tile_color 0xcccccc00
   xpos 34
   ypos 108
  }
set N1f011d90 [stack 0]
  Shuffle {
   name vector_layer
   xpos 140
   ypos 104
  }
  Remove {
   operation keep
   channels rgba
   name Remove1
   xpos 140
   ypos 130
  }
  Dot {
   name Dot3
   tile_color 0x9e3c6300
   xpos 174
   ypos 156
  }
set N1f02dd60 [stack 0]
push $N1f02dd60
  Dot {
   name Dot4
   tile_color 0x9e3c6300
   xpos 377
   ypos 156
  }
  Expression {
   channel0 rgba
   expr0 sqrt((r*r)+(g*g)+(b*b))
   channel2 {-rgba.red -rgba.green -rgba.blue none}
   channel3 {none none none -rgba.alpha}
   name Mag3
   xpos 343
   ypos 209
  }
  Dot {
   name Dot5
   tile_color 0xcccccc00
   xpos 377
   ypos 271
  }
  Merge2 {
   inputs 2
   operation divide
   bbox B
   name Merge1
   xpos 140
   ypos 267
  }
  Dot {
   name Dot2
   tile_color 0x4b5ec600
   xpos 174
   ypos 364
  }
push $N1f011d90
  ShuffleCopy {
   inputs 2
   in2 none
   red red
   green green
   blue blue
   out {{{parent.UV_Channel.in}}}
   name ShuffleCopy1
   xpos 0
   ypos 360
  }
  Output {
   name Output1
   xpos 0
   ypos 506
  }
 end_group
 Expression {
  expr0 degrees(acos(g))-90
  expr1 degrees(atan(r/b))-90
  expr2 0
  name Expression1
  xpos 0
  ypos 176
 }
set N29a86390 [stack 0]
 Output {
  name Output1
  xpos 0
  ypos 300
 }
push $N29a86390
 Viewer {
  frame_range 1001-1296
  colour_sample_bbox {-0.4462890625 -0.466796875 -0.4453125 -0.4658203125}
  name Viewer1
  xpos 101
  ypos 114
 }
end_group
Group {
 inputs 0
 name Vector_To_angles
 xpos -1685
 ypos 588
}
 Input {
  inputs 0
  name vector3
  xpos 0
  ypos -2
 }
 Group {
  name NormalizeVector3_
  help "Normalize the magnitude of a Vector3 (to be of magnitude 1)"
  xpos 0
  ypos 103
  addUserKnob {20 main_tab l "Normalize Vector3"}
  addUserKnob {41 in l "Vector B Layer" t "Layer containing the vector information for input B" T vector_layer.in}
  addUserKnob {26 ""}
  addUserKnob {26 copyright l "" +STARTLINE T "v1.0 -  Mathieu Goulet-Aubin & Erwan Leroy - <a href=\"https://github.com/mapoga/nuke-vector-matrix\" style=\"color:#aaa\">Github</a>"}
 }
  Input {
   inputs 0
   name vectorB
   xpos 0
  }
  Dot {
   name Dot1
   tile_color 0xcccccc00
   xpos 34
   ypos 108
  }
set N3a33a4b0 [stack 0]
  Shuffle {
   name vector_layer
   xpos 140
   ypos 104
  }
  Remove {
   operation keep
   channels rgba
   name Remove1
   xpos 140
   ypos 130
  }
  Dot {
   name Dot3
   tile_color 0x9e3c6300
   xpos 174
   ypos 156
  }
set N45871400 [stack 0]
push $N45871400
  Dot {
   name Dot4
   tile_color 0x9e3c6300
   xpos 377
   ypos 156
  }
  Expression {
   channel0 rgba
   expr0 sqrt((r*r)+(g*g)+(b*b))
   channel2 {-rgba.red -rgba.green -rgba.blue none}
   channel3 {none none none -rgba.alpha}
   name Mag3
   xpos 343
   ypos 209
  }
  Dot {
   name Dot5
   tile_color 0xcccccc00
   xpos 377
   ypos 271
  }
  Merge2 {
   inputs 2
   operation divide
   bbox B
   name Merge1
   xpos 140
   ypos 267
  }
  Dot {
   name Dot2
   tile_color 0x4b5ec600
   xpos 174
   ypos 364
  }
push $N3a33a4b0
  ShuffleCopy {
   inputs 2
   in2 none
   red red
   green green
   blue blue
   out {{{parent.UV_Channel.in}}}
   name ShuffleCopy1
   xpos 0
   ypos 360
  }
  Output {
   name Output1
   xpos 0
   ypos 506
  }
 end_group
 Expression {
  expr0 degrees(acos(g))-90
  expr1 degrees(atan(r/b))-90
  expr2 0
  name Expression1
  xpos 0
  ypos 176
 }
set N24f63900 [stack 0]
 Output {
  name Output1
  xpos 0
  ypos 300
 }
push $N24f63900
 Viewer {
  frame_range 1001-1296
  colour_sample_bbox {-0.4462890625 -0.466796875 -0.4453125 -0.4658203125}
  name Viewer1
  xpos 101
  ypos 114
 }
end_group
